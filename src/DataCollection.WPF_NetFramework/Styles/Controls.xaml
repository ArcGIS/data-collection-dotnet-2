<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.Shared.Converters">
    <converters:LocalizationConverter x:Key="LocalizationConverter" />
    <Style x:Key="CardControlStripStyle" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
    </Style>
    <Style x:Key="PathIconBase" TargetType="Path">
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="Width" Value="{StaticResource IconLargeLength}" />
        <Setter Property="Height" Value="{StaticResource IconLargeLength}" />
        <Setter Property="Fill" Value="{StaticResource ChromeForegroundBrush}" />
        <Setter Property="Margin" Value="{StaticResource UniformMediumThickness}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="ButtonBaseStyle" TargetType="ButtonBase">
        <Setter Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ChromeBorderThickness}" />
        <Setter Property="BorderBrush" Value="{StaticResource ChromeBorderBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="{StaticResource UniformLargeThickness}" />
        <Setter Property="Cursor" Value="{StaticResource ActionCursor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bg"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource ChromeBackgroundHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CardControlStripButtonStyle"
           BasedOn="{StaticResource ButtonBaseStyle}"
           TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style x:Key="MinimalistTabItemStyle" TargetType="TabItem">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter x:Name="HeaderSite"
                                      Content="{TemplateBinding Content}"
                                      Cursor="{StaticResource ActionCursor}" />
                    <DataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderSite" Property="TextElement.Foreground" Value="{StaticResource TintBrush}" />
                            <Setter TargetName="HeaderSite" Property="TextElement.FontSize" Value="{StaticResource LargeFontSize}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="HeaderSite" Property="TextElement.Foreground" Value="{StaticResource ChromeForegroundBrush}" />
                            <Setter TargetName="HeaderSite" Property="TextElement.FontSize" Value="{StaticResource LargeFontSize}" />
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="ControlBorder"
                            Margin="0"
                            Padding="{StaticResource UniformLargeThickness}"
                            Background="{StaticResource ContentBackgroundBrush}"
                            BorderThickness="0,0,0,1">
                        <Grid Name="Panel">
                            <ContentPresenter x:Name="ContentSite"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentSource="Header" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ControlBorder" Property="BorderBrush" Value="{StaticResource TintBrush}" />
                            <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="{StaticResource HeadingFontWeight}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="ControlBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="{StaticResource NormalFontWeight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FieldLabelStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="{StaticResource HeadingFontWeight}" />
        <Setter Property="Margin" Value="{StaticResource TopBottomMediumThickness}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
    </Style>
    <Style x:Key="FieldValueReadonlyStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    </Style>
    <Style x:Key="FieldValueStyle" TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True" />
        <!--
            Border brush is set to match background, while maintaining border thickness, to prevent
            layout shift when editing
        -->
        <Setter Property="BorderThickness" Value="{StaticResource ChromeBorderThickness}" />
        <Setter Property="BorderBrush" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="Padding" Value="{StaticResource UniformLargeThickness}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="{StaticResource ChromeForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SelectionBrush" Value="{StaticResource TintBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EditableFieldValueStyle"
           BasedOn="{StaticResource FieldValueStyle}"
           TargetType="TextBox">
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="IsReadOnly" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="BorderBrush" Value="{StaticResource ChromeBorderBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DatePickerValueStyle" TargetType="DatePicker">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="{StaticResource UniformLargeThickness}" />
        <Setter Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ChromeForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ChromeBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ChromeBorderThickness}" />
        <Setter Property="TextElement.Background" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="TextElement.Foreground" Value="{StaticResource ChromeForegroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style x:Key="ValidationErrorTextStyle"
           BasedOn="{StaticResource FieldLabelStyle}"
           TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
        <Setter Property="Margin" Value="{StaticResource UniformMediumThickness}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="UnstyledListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MapOverlayBorderForegroundTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource MapShadeOffsetBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource UniformMediumThickness}" />
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}" />
    </Style>
    <Style x:Key="MapOverlayBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource MapShadeBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource MapLightBoxBorderThickness}" />
    </Style>
    <Style x:Key="StatusPanelTitleStyle"
           BasedOn="{StaticResource FieldLabelStyle}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}" />
    </Style>
    <Style x:Key="StatusPanelBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TintBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ChromeBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource UniformXlThickness}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="StatusPanelProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource TintBrush}" />
        <Setter Property="Height" Value="{StaticResource IconLargeLength}" />
        <Setter Property="MaxWidth" Value="300" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="Margin" Value="{StaticResource TopBottomLargeThickness}" />
    </Style>
    <Style x:Key="StatusPanelCaptionTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ChromeForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource NormalFontWeight}" />
        <Setter Property="Margin" Value="{StaticResource TopBottomLargeThickness}" />
    </Style>
    <Style x:Key="StatusPanelButtonStyle"
           BasedOn="{StaticResource ButtonBaseStyle}"
           TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource TintBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TintBrush}" />
    </Style>
    <Style x:Key="RecordCardBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource TintBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="Padding" Value="{StaticResource UniformLargeThickness}" />
        <Setter Property="Margin" Value="{StaticResource TopBottomMediumThickness}" />
    </Style>
    <Style x:Key="MapAccessoryButtonStyle"
           BasedOn="{StaticResource ButtonBaseStyle}"
           TargetType="Button" />
    <Style x:Key="MapAccessoryIconStyle"
           BasedOn="{StaticResource PathIconBase}"
           TargetType="Path" />
    <Style x:Key="TitleBarBlueButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="{StaticResource ActionCursor}" />
        <Setter Property="Padding" Value="{StaticResource WidePaddingThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BlueBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WindowButtonIconStyle"
           BasedOn="{StaticResource PathIconBase}"
           TargetType="Path">
        <Setter Property="Height" Value="12" />
        <Setter Property="Width" Value="12" />
    </Style>
    <Style x:Key="OnMapAttributionButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="{StaticResource ActionCursor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TitleBarRedButtonStyle"
           BasedOn="{StaticResource TitleBarBlueButtonStyle}"
           TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CloseButtonBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TitleBarPopoverBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="MaxWidth" Value="300" />
        <Setter Property="Margin" Value="{StaticResource UniformMediumThickness}" />
        <Setter Property="Padding" Value="{StaticResource UniformLargeThickness}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="{StaticResource TintBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ChromeBorderThickness}" />
    </Style>
    <Style x:Key="TitleBarPopoverLabelStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="TitleBarPopoverProminentLabelStyle"
           BasedOn="{StaticResource TitleBarPopoverLabelStyle}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="{StaticResource HeadingFontWeight}" />
    </Style>
    <Style x:Key="TitleBarButtonTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ChromeForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource SidesMediumThickness}" />
    </Style>
    <Style x:Key="PopupStyle" TargetType="Popup">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="VerticalOffset" Value="10" />
        <Setter Property="StaysOpen" Value="False" />
        <Setter Property="PopupAnimation" Value="Fade" />
    </Style>
    <Style x:Key="TocCheckboxStyle" TargetType="CheckBox">
        <Setter Property="Content" Value="{Binding Name}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border x:Name="OuterBorder"
                            Padding="{StaticResource UniformLargeThickness}"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            Cursor="{StaticResource ActionCursor}">
                        <Grid x:Name="OuterGrid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path x:Name="CheckImagePath"
                                  Grid.Column="0"
                                  Data="{StaticResource icon-check-circle-16}"
                                  Style="{StaticResource PathIconBase}" />
                            <TextBlock Grid.Column="1"
                                       Margin="{StaticResource LeftLargeThickness}"
                                       VerticalAlignment="Center"
                                       FontSize="{StaticResource DefaultFontSize}"
                                       FontWeight="{StaticResource NormalFontWeight}"
                                       Foreground="{StaticResource ContentForegroundBrush}"
                                       Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ChromeBackgroundHoverBrush}" />
                            <Setter TargetName="OuterGrid" Property="Background" Value="{StaticResource ChromeBackgroundHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckImagePath" Property="Data" Value="{StaticResource icon-view-visible-16}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckImagePath" Property="Data" Value="{StaticResource icon-view-mixed-16}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckImagePath" Property="Data" Value="{StaticResource icon-view-hide-16}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AttributionTextBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource AttributionBackgroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource UniformMediumThickness}" />
        <Setter Property="Padding" Value="{StaticResource UniformMediumThickness}" />
        <Setter Property="TextBlock.TextTrimming" Value="WordEllipsis" />
        <Setter Property="BorderBrush" Value="{StaticResource AttributionBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ChromeBorderThickness}" />
    </Style>
    <Style x:Key="CardCloseButtonStyle"
           BasedOn="{StaticResource ButtonBaseStyle}"
           TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ToolTip" Value="{Binding ., ConverterParameter=CloseButton_Tooltip, Converter={StaticResource LocalizationConverter}}" />
    </Style>
    <Style x:Key="TitleBarButtonBaseStyle"
           BasedOn="{StaticResource ButtonBaseStyle}"
           TargetType="ButtonBase">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="{StaticResource WidePaddingThickness}" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    </Style>
    <Style x:Key="TitleBarToggleButtonStyle"
           BasedOn="{StaticResource TitleBarButtonBaseStyle}"
           TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="bg"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Cursor="{TemplateBinding Cursor}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource ChromeBackgroundHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource ChromeBackgroundHoverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TitleBarButtonStyle"
           BasedOn="{StaticResource TitleBarButtonBaseStyle}"
           TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bg"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Cursor="{TemplateBinding Cursor}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource ChromeBackgroundHoverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TitleBarButtonIconPathStyle"
           BasedOn="{StaticResource PathIconBase}"
           TargetType="Path">
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style x:Key="TitleBarCaretIconStyle"
           BasedOn="{StaticResource PathIconBase}"
           TargetType="Path">
        <Setter Property="Width" Value="{StaticResource IconSmallLength}" />
        <Setter Property="Height" Value="{StaticResource IconSmallLength}" />
        <Setter Property="Data" Value="{StaticResource icon-caret-down-16}" />
    </Style>
    <Style x:Key="TitleBarIconImageStyle" TargetType="Image">
        <Setter Property="Height" Value="{StaticResource IconLargeLength}" />
        <Setter Property="Width" Value="{StaticResource IconLargeLength}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource UniformLargeThickness}" />
    </Style>
    <Style x:Key="FieldAccessoryButtonStyle"
           BasedOn="{StaticResource ButtonBaseStyle}"
           TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <Style x:Key="CardButtonIconStyle"
           BasedOn="{StaticResource PathIconBase}"
           TargetType="Path" />
    <Style x:Key="MapOverlayButtonStyle"
           BasedOn="{StaticResource ButtonBaseStyle}"
           TargetType="Button">
        <Setter Property="Padding" Value="{StaticResource WidePaddingThickness}" />
        <Setter Property="Margin" Value="{StaticResource UniformMediumThickness}" />
        <Setter Property="Foreground" Value="{StaticResource ChromeForegroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style x:Key="MapAccessoryPanelStyle" TargetType="StackPanel">
        <Setter Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Margin" Value="{StaticResource TopSidesLargeThickness}" />
    </Style>
    <Style x:Key="MapOverlayButtonTextStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource LeftLargeThickness}" />
    </Style>
    <Style x:Key="CardTitleStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ChromeForegroundBrush}" />
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource CardTitleFontWeight}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource LeftLargeThickness}" />
    </Style>
    <Style x:Key="CardTitleBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource ChromeBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TintBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource TopMediumThickness}" />
    </Style>
</ResourceDictionary>