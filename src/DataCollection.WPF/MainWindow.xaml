<Window
    x:Class="Esri.ArcGISRuntime.OpenSourceApps.DataCollection.WPF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.Shared.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:esri="http://schemas.esri.com/arcgis/runtime/2013"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:localconverters="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.WPF.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:utils="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.Shared.Utils"
    xmlns:viewModels="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.Shared.ViewModels"
    xmlns:views="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.WPF.Views"
    xmlns:MapUI="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.CustomControls.Panels;assembly=Esri.ArcGISRuntime.OpenSourceApps.DataCollection.CustomControls" 
    xmlns:cards="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.CustomControls.Cards;assembly=Esri.ArcGISRuntime.OpenSourceApps.DataCollection.CustomControls"
    xmlns:cc="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.WPF.Views.Cards" xmlns:panels="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.WPF.Views.Panels" xmlns:transientoverlays="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.WPF.Views.TransientOverlays"
    Title="Data Collection for .NET (WPF)"
    BorderBrush="{StaticResource tint}" BorderThickness="1"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:ConnectivityModeToVisibilityConverter x:Key="ConnectivityModeToVisibilityConverter" />
            <localconverters:ConnectivityModeToColorConverter x:Key="ConnectivityModeToColorConverter" />
            <localconverters:BoolToCursorConverter x:Key="BoolToCursorConverter" />
            <converters:EmptyCollectionToVisibilityConverter x:Key="EmptyCollectionToVisibilityConverter" />
            <converters:LocalizationConverter x:Key="LocalizationConverter" />
            <converters:NullToBoolConverter x:Key="NullToBoolConverter" />
            <converters:PointToDoubleConverter x:Key="PointToDoubleConverter" />
            <localconverters:MapTitleConverter x:Key="MapTitleConverter" />
            <MapUI:ResponsiveValueConverter x:Key="RVC" />
            <viewModels:MainViewModel x:Key="MainViewModel" />

        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="OuterGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="TitleBar" 
              Grid.Row="0" 
              Background="{StaticResource chrome-background}"
              MouseLeftButtonDown="OnMouseLeftButtonDown" 
              MouseRightButtonUp="OnMouseRightButtonUp">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <!-- Image -->
                <ColumnDefinition Width="Auto" />
                <!-- App title-->
                <ColumnDefinition Width="*" />
                <!-- Spacing -->
                <ColumnDefinition Width="200" />
                <!-- Map Status / Work offline button-->
                <ColumnDefinition Width="*" />
                <!-- Spacing -->
                <ColumnDefinition Width="Auto" />
                <!-- User/Login button -->
                <ColumnDefinition Width="Auto" />
                <!-- Separator bar -->
                <ColumnDefinition Width="Auto" />
                <!-- Minimize Button -->
                <ColumnDefinition Width="Auto" />
                <!-- Maximize button -->
                <ColumnDefinition Width="Auto" />
                <!-- Close button -->
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" 
                  Grid.ColumnSpan="10" 
                  WindowChrome.IsHitTestVisibleInChrome="True">
                <ToggleButton x:Name="WorkOnlineButton" Style="{StaticResource TitleBarToggleButton}"
                              HorizontalAlignment="Center"
                              Visibility="{Binding Source={StaticResource MainViewModel}, Path=ConnectivityMode, Converter={StaticResource ConnectivityModeToVisibilityConverter}}"
                              MouseEnter="WorkOnlineButton_MouseEnter" MouseLeave="WorkOnlineButton_MouseLeave">
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{StaticResource icon-online-16}"
                              Style="{StaticResource TitleBarButtonIconPathStyle}"
                              Fill="{DynamicResource success}" />
                        <TextBlock Margin="10,0,0,0" Foreground="{DynamicResource success}" Style="{StaticResource TitleBarButtonTextStyle}">
                            <Run Text="Working Online" FontWeight="SemiBold" />
                            <Run Text=" - " />
                            <Run Text="{Binding Source={StaticResource MainViewModel}, Path=MapViewModel.Map.Item.Title, Mode=OneWay}" />
                        </TextBlock>
                    </StackPanel>
                </ToggleButton>
                <ToggleButton x:Name="WorkOfflineButton" Style="{StaticResource TitleBarToggleButton}"
                              HorizontalAlignment="Center"
                              MouseEnter="WorkOnlineButton_MouseEnter" MouseLeave="WorkOnlineButton_MouseLeave"
                              Visibility="{Binding Source={StaticResource MainViewModel}, Path=ConnectivityMode, Converter={StaticResource ConnectivityModeToVisibilityConverter}, ConverterParameter=Inverse}">
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{StaticResource icon-offline-16}" Style="{StaticResource TitleBarButtonIconPathStyle}" />
                        <TextBlock Text="Working Offline" Style="{StaticResource TitleBarButtonTextStyle}" />
                    </StackPanel>
                </ToggleButton>
            </Grid>
            <Image Style="{StaticResource TitleBarIconImageStyle}" 
                   Source="Images/ArcGIS_Open_Source_Apps.ico" />
            <!-- TODO localize everything here -->
            <TextBlock Grid.Column="1" Text="Data Collection for .NET (WPF)"
                       Style="{StaticResource TitleBarTitleTextStyle}"/>
            <Button Grid.Column="5"
                    Style="{StaticResource TitleBarButton}"
                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left"
                    Command="{Binding Source={StaticResource MainViewModel}, Path=AuthViewModel.SignInCommand, Mode=OneWay}"
                    Visibility="{Binding Source={StaticResource MainViewModel}, Path=AuthViewModel.AuthenticatedUser, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}">
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource icon-sign-in-16}" Style="{StaticResource TitleBarButtonIconPathStyle}" />
                    <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=TitleBar_SignInButton_Text}"
                               Style="{StaticResource TitleBarButtonTextStyle}" />
                </StackPanel>
            </Button>
            <ToggleButton x:Name="UserPopupButton" Grid.Column="5" 
                          Style="{StaticResource TitleBarToggleButton}"
                          HorizontalAlignment="Right"
                          MouseEnter="WorkOnlineButton_MouseEnter" MouseLeave="WorkOnlineButton_MouseLeave"
                          Visibility="{Binding Source={StaticResource MainViewModel}, Path=AuthViewModel.AuthenticatedUser, Converter={StaticResource NullToVisibilityConverter}}">
                <StackPanel Orientation="Horizontal">
                    <Ellipse Style="{StaticResource TitleBarUserIconStyle}"
                             Visibility="{Binding Source={StaticResource MainViewModel}, Path=AuthViewModel.AuthenticatedUser.ThumbnailUri, Converter={StaticResource NullToVisibilityConverter}}">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding Source={StaticResource MainViewModel}, Path=AuthViewModel.AuthenticatedUser.ThumbnailUri}" />
                        </Ellipse.Fill>
                    </Ellipse>
                    <TextBlock Text="{Binding Source={StaticResource MainViewModel}, Path=AuthViewModel.AuthenticatedUser.FullName, Mode=OneWay}"
                               Style="{StaticResource TitleBarButtonTextStyle}" />
                </StackPanel>
            </ToggleButton>
            <TextBlock Grid.Column="6" Text="|" FontWeight="SemiBold" Margin="{StaticResource margin-sides}" Foreground="{StaticResource chrome-foreground}" VerticalAlignment="Center" />
            <Button Grid.Column="7" Click="OnMinimizeWindow" Style="{StaticResource TitleBarBlueButtonStyle}">
                <Path Data="{StaticResource icon-underscore-16}" Style="{StaticResource TitleBarPathIcon}"/>
            </Button>
            <Button Style="{StaticResource TitleBarBlueButtonStyle}" 
                    Grid.Column="8" Click="OnMaximizeWindow">
                <Grid>
                    <Path x:Name="MinimizePath" Data="{StaticResource icon-minimize-16}" Style="{StaticResource TitleBarPathIcon}" />
                    <Path x:Name="MaximizePath" Data="{StaticResource icon-maximize-16}" Style="{StaticResource TitleBarPathIcon}" Visibility="Collapsed" />
                </Grid>
            </Button>
            <Button Grid.Column="9" Click="OnCloseWindow" Style="{StaticResource TitleBarRedButtonStyle}">
                <Path Data="{StaticResource icon-x-16}" Style="{StaticResource TitleBarPathIcon}" />
            </Button>
        </Grid>

        <MapUI:MapLayoutPanel DataContext="{StaticResource MainViewModel}" Grid.Row="2"
                              WidthBreakpoint="600"
                              x:Name="ParentPanel">
            <!--  MapView control  -->
            <esri:MapView
            x:Name="MapView"
            MapUI:MapLayoutPanel.LayoutRole="BackgroundView"
            utils:MapViewExtensions.IdentifyController="{Binding IdentifyController}"
            utils:MapViewExtensions.MapAccessoryViewModel="{Binding MapAccessoryViewModel}"
            Cursor="{Binding IdentifyController.IsIdentifyInProgress, Converter={StaticResource BoolToCursorConverter}}"
            IsAttributionTextVisible="False"
            ViewInsets="{Binding ElementName=ParentPanel, Path=SafeViewInsets, Mode=OneWay}"
            Map="{Binding MapViewModel.Map, Mode=TwoWay}">
                <utils:MapViewExtensions.ViewpointController>
                    <utils:ViewpointController Viewpoint="{Binding MapViewModel.AreaOfInterest, Source={StaticResource MainViewModel}, Mode=TwoWay}" />
                </utils:MapViewExtensions.ViewpointController>
                <utils:MapViewExtensions.LocationDisplayController>
                    <utils:LocationDisplayController DataSource="{Binding MapViewModel.LocationDataSource, Source={StaticResource MainViewModel}}" />
                </utils:MapViewExtensions.LocationDisplayController>
            </esri:MapView>

            <Canvas MapUI:MapLayoutPanel.LayoutRole="BackgroundView">
                <Path x:Name="IdentifyProgressBar"
              Grid.RowSpan="3"
               Canvas.Left="{Binding IdentifyController.TappedScreenPosition, Converter={StaticResource PointToDoubleConverter}, ConverterParameter=Left|-22, Mode=OneWay}"
                      Canvas.Top="{Binding IdentifyController.TappedScreenPosition, Converter={StaticResource PointToDoubleConverter}, ConverterParameter=Top|-22, Mode=OneWay}"
              Style="{StaticResource AnimatedSpinnerPathStyle}"
              Margin="0"
              Visibility="{Binding Source={StaticResource MainViewModel}, Path=IdentifyController.IsIdentifyInProgress, Converter={StaticResource BoolToVisibilityConverter}}"          
              Data="{StaticResource icon-spinner-16}"
              RenderTransformOrigin="0.5,0.5">
            <Path.RenderTransform>
                <RotateTransform Angle="0"  />
            </Path.RenderTransform>
            <Path.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- TODO : stop animating when not visible -->
                                <DoubleAnimation Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                                             From="0" Duration="0:0:1" To="360" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
            </EventTrigger>
        </Path.Triggers>
        </Path>
            </Canvas>

            <StackPanel Style="{StaticResource MapAccessoryPanel}"
                        MapUI:MapLayoutPanel.AttachPosition="TopLeft"
                        MapUI:MapLayoutPanel.LayoutRole="FloatingAccessory">
                <Button Style="{StaticResource MapAccessoryButtonStyle}"
                        Command="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel.GoHomeCommand}">
                    <Path Data="{StaticResource icon-home-16}" Style="{StaticResource MapAccessoryIconStyle}" />
                </Button>
            </StackPanel>

            <StackPanel Style="{StaticResource MapAccessoryPanel}"
                        MapUI:MapLayoutPanel.LayoutRole="FloatingAccessory"
                        MapUI:MapLayoutPanel.AttachPosition="TopLeft">
                <Button Style="{StaticResource MapAccessoryButtonStyle}"
                        Command="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel.ZoomInCommand}">
                    <Path Data="{StaticResource icon-plus-16}" Style="{StaticResource MapAccessoryIconStyle}" />
                </Button>
                <Button Style="{StaticResource MapAccessoryButtonStyle}"
                        Command="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel.ZoomOutCommand}">
                    <Path Data="{StaticResource icon-minus-16}" Style="{StaticResource MapAccessoryIconStyle}" />
                </Button>
            </StackPanel>

            <StackPanel Style="{StaticResource MapAccessoryPanel}"
                        MapUI:MapLayoutPanel.LayoutRole="FloatingAccessory"
                        MapUI:MapLayoutPanel.AttachPosition="TopLeft">
                <!--  Current Location Button  -->
                <Button Style="{StaticResource MapAccessoryButtonStyle}"
                        Command="{Binding Source={StaticResource MainViewModel}, Path=MapViewModel.MoveToCurrentLocationCommand}"
                        IsEnabled="{Binding Source={StaticResource MainViewModel}, Path=MapViewModel.IsLocationStarted}"
                        ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=CurrentLocationButton.Label}">
                    <Path Data="{StaticResource icon-gps-on-16}" Style="{StaticResource MapAccessoryIconStyle}" />
                </Button>
            </StackPanel>

            <!-- Widget Controls -->
            <StackPanel Style="{StaticResource MapAccessoryPanel}" 
                        MapUI:MapLayoutPanel.LayoutRole="FloatingAccessory" 
                        MapUI:MapLayoutPanel.AttachPosition="TopRight"
                        DataContext="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel}">
                <Button Command="{Binding ToggleBookmarksCommand, Mode=OneTime}" 
                         Style="{StaticResource MapAccessoryButtonStyle}"
                         ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=ShowBookmarksButton.Label}"
                         Visibility="{Binding ElementName=MapView, Path=Map.Bookmarks, Converter={StaticResource EmptyCollectionToVisibilityConverter}, ConverterParameter=Inverse}">
                    <Path Data="{StaticResource icon-bookmark-16}" Style="{StaticResource MapAccessoryIconStyle}" />
                </Button>
                <!--  Legend Button -->
                <Button Command="{Binding ToggleLayersCommand, Mode=OneTime}"
                        Style="{StaticResource MapAccessoryButtonStyle}"
                        ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=ShowLegendButton.Label}">
                    <Path Data="{StaticResource icon-legend-16}" Style="{StaticResource MapAccessoryIconStyle}" />
                </Button>
                <!--  TOC Button -->
                <Button Command="{Binding ToggleTocCommand}"
                        Style="{StaticResource MapAccessoryButtonStyle}"
                        ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=ShowTOCButton.Label}">
                    <Path Data="{StaticResource icon-layers-16}" Style="{StaticResource MapAccessoryIconStyle}" />
                </Button>
            </StackPanel>

            <!-- Editing Controls -->
            <StackPanel Style="{StaticResource MapAccessoryPanel}"
                        Margin="{StaticResource padding-default}"
                        MapUI:MapLayoutPanel.AttachPosition="TopRight"
                        MapUI:MapLayoutPanel.LayoutRole="FloatingAccessory">
                <!--  Add Feature Button  -->
                <Button Style="{StaticResource MapAccessoryButtonStyle}"
                        Command="{Binding Source={StaticResource MainViewModel}, Path=StartNewFeatureCommand, Mode=OneWay}"
                        IsEnabled="{Binding ElementName=MapView, Path=Map, Converter={StaticResource NullToBoolConverter}}"
                        ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=AddFeatureButton.Label}"
                        Visibility="{Binding IsAddingFeature, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}" >
                    <Path Data="{StaticResource icon-plus-circle-16}" Style="{StaticResource MapAccessoryIconStyle}" Fill="{DynamicResource success}" />
                </Button>
            </StackPanel>

            <!-- Attribution Controls -->
            <Button Style="{StaticResource OnMapAttributionButtonStyle}"
                    MapUI:MapLayoutPanel.LayoutRole="FloatingAccessory"
                    MapUI:MapLayoutPanel.AttachPosition="BottomRight"
                    Command="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel.ToggleAttributionCommand}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Border Style="{StaticResource AttributionTextBorderStyle}">
                        <TextBlock FontSize="9" 
                           Text="{Binding ElementName=MapView, Path=AttributionText, UpdateSourceTrigger=PropertyChanged}"
                           ToolTipService.ToolTip="{Binding ElementName=MapView, Path=AttributionText, UpdateSourceTrigger=PropertyChanged}"/>
                    </Border>
                                        <Path Height="20" Stretch="Uniform" Fill="Black" Grid.Column="1"
                        Margin="7,7,5,5" Data="{StaticResource icon-esri-logo}" />
                <Path Height="20" Stretch="Uniform" Fill="White" Grid.Column="1"
                  Margin="5"
                  Data="{StaticResource icon-esri-logo}" />
</Grid>
            </Button>

            <!--  Compass control that displays when user rotates the map  -->
            <esri:Compass Margin="10"
                          MapUI:MapLayoutPanel.LayoutRole="FloatingAccessory" MapUI:MapLayoutPanel.AttachPosition="TopLeft"
                          AutoHide="True"
                          HorizontalAlignment="Center"
                          Width="44" Height="44"
                          GeoView="{Binding ElementName=MapView, Mode=OneWay}" />

            <!--  New feature overlay  -->
            <views:AddFeatureView x:Name="AddFeatureView"
                                  MapUI:MapLayoutPanel.LayoutRole="TransientOverlay"
                                  Visibility="{Binding IsAddingFeature, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />

            <!--  Download view  -->
            <views:DownloadView MapUI:MapLayoutPanel.LayoutRole="TransientOverlay"
                                Visibility="{Binding DownloadViewModel, Converter={StaticResource NullToVisibilityConverter}}"
                                VisibleArea="{Binding ElementName=MapView, Path=VisibleArea}" />

            <!--  Sync View  -->
            <Grid Background="{DynamicResource map-overlay-border-background}"
                  MapUI:MapLayoutPanel.LayoutRole="TransientOverlay"
                  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                  Visibility="{Binding SyncViewModel, Converter={StaticResource NullToVisibilityConverter}}">
                <transientoverlays:SyncProgressView DataContext="{Binding Source={StaticResource MainViewModel}, Path=SyncViewModel}"
                                                    HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>

            <Grid Background="{DynamicResource map-overlay-border-background}"
                  MapUI:MapLayoutPanel.LayoutRole="TransientOverlay"
                  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                  Visibility="{Binding MapAccessoryViewModel.IsAttributionOpen, Converter={StaticResource BoolToVisibilityConverter}}">
                <transientoverlays:AttributionOverlay DataContext="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel}"
                                                      HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>

            <cards:CardDeck MapUI:MapLayoutPanel.LayoutRole="FloatingSheet"
                            CardPresenterStyle="{StaticResource BasicCardStyle}"
                            NavigationContainerStyle="{StaticResource NavContainerStyle}"
                            Background="{StaticResource content-background}"
                            DataContext="{Binding MapAccessoryViewModel}"
                            NavigationItemTemplate="{StaticResource NavItemTemplate}"
                            Margin="{Binding IsCollapsed, ElementName=ParentPanel, Converter={StaticResource RVC}, ConverterParameter='0,5,0,0|10'}">
                <cards:CardDeck.Cards>
                    <cards:OverlayCard Title="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel.PopupManager.Title}"
                                       IconSource="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel.IconImageSource}"
                                       IsOpen="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel, Converter={StaticResource NullToBoolConverter}}">
                        <views:IdentifiedFeaturePopup DataContext="{Binding Source={StaticResource MainViewModel}}" />
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{Binding Source={StaticResource MainViewModel}, Path=ClearIdentifiedFeatureCommand, Mode=OneTime}" Style="{StaticResource CardCloseStyle}">
                                <Path Data="{StaticResource icon-x-16}" Style="{StaticResource PathIconBase}"  />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                    <cards:OverlayCard Title="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel.SelectedOriginRelationship.PopupManager.Title, Mode=OneWay}"
                                       IconSource="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel.SelectedOriginRelationship.IconImageSource, Mode=OneWay}"
                                       IsOpen="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel.SelectedOriginRelationship, Converter={StaticResource NullToBoolConverter}, FallbackValue=False}">
                        <views:OriginRelatedRecordPopup DataContext="{Binding Source={StaticResource MainViewModel}}" />
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel.ClearRelationshipsCommand, Mode=OneWay}" Style="{StaticResource CardCloseStyle}">
                                <Path Data="{StaticResource icon-x-16}" Style="{StaticResource PathIconBase}"  />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                    <cards:OverlayCard Title="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel.SelectedDestinationRelationship.PopupManager.Title, Mode=OneWay}"
                                       IconSource="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel.SelectedDestinationRelationship.IconImageSource, Mode=OneWay}"
                                       IsOpen="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel.SelectedDestinationRelationship, Converter={StaticResource NullToBoolConverter}, FallbackValue=False}">
                        <views:DestinationRelatedRecordPopup DataContext="{Binding Source={StaticResource MainViewModel}}" />
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{Binding Source={StaticResource MainViewModel}, Path=IdentifiedFeatureViewModel.ClearRelationshipsCommand, Mode=OneWay}" Style="{StaticResource CardCloseStyle}">
                                <Path Data="{StaticResource icon-x-16}" Style="{StaticResource PathIconBase}" />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                    <cards:OverlayCard
                        Title="{Binding Source={x:Null}, Converter={StaticResource LocalizationConverter}, ConverterParameter=TOC_PanelHeader}"
                        IsOpen="{Binding MapAccessoryViewModel.IsTocOpen, Mode=OneWay, Source={StaticResource MainViewModel}}">
                        <cc:TocCard MapAccessoryViewModel="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel, Mode=OneWay}" />
                        <cards:OverlayCard.IconContent>
                            <Path Data="{StaticResource icon-layers-16}" Style="{StaticResource PathIconBase}" />
                        </cards:OverlayCard.IconContent>
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel.ToggleTocCommand, Mode=OneTime}" Style="{StaticResource CardCloseStyle}">
                                <Path Data="{StaticResource icon-x-16}" Style="{StaticResource PathIconBase}" />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                    <cards:OverlayCard Title="{Binding Source={x:Null}, Converter={StaticResource LocalizationConverter}, ConverterParameter=Bookmarks_PanelHeader}"
                                       IsOpen="{Binding MapAccessoryViewModel.IsBookmarksOpen, Mode=OneWay, Source={StaticResource MainViewModel}}">
                        <cards:OverlayCard.IconContent>
                            <Path Data="{StaticResource icon-bookmark-16}" Style="{StaticResource PathIconBase}"  />
                        </cards:OverlayCard.IconContent>
                        <esri:BookmarksView GeoView="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel.MapView, Mode=OneTime}"
                                            ItemTemplate="{StaticResource BookmarksViewItemTemplate}" />
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel.ToggleBookmarksCommand, Mode=OneTime}" Style="{StaticResource CardCloseStyle}">
                                <Path Data="{StaticResource icon-x-16}" Style="{StaticResource PathIconBase}" />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                    <cards:OverlayCard Title="{Binding Source={x:Null}, Converter={StaticResource LocalizationConverter}, ConverterParameter=Legend_PanelHeader}"
                                       IsOpen="{Binding MapAccessoryViewModel.IsLayersOpen, Mode=OneWay, Source={StaticResource MainViewModel}}">
                        <esri:Legend GeoView="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel.MapView, Mode=OneWay}"
                                     Background="{StaticResource content-background}"/>
                        <cards:OverlayCard.IconContent>
                            <Path Data="{StaticResource icon-legend-16}" Style="{StaticResource PathIconBase}" />
                        </cards:OverlayCard.IconContent>
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{Binding Source={StaticResource MainViewModel}, Path=MapAccessoryViewModel.ToggleLayersCommand, Mode=OneTime}" 
                                    Style="{StaticResource CardCloseStyle}">
                                <Path Data="{StaticResource icon-x-16}" Style="{StaticResource PathIconBase}" />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                </cards:CardDeck.Cards>
            </cards:CardDeck>

            <!--  Sign In Window  -->
            <views:SignInWindow MapUI:MapLayoutPanel.LayoutRole="TransientOverlay" />

            <Grid MapUI:MapLayoutPanel.LayoutRole="TransientOverlay"
              Visibility="{Binding IsBusyWaiting, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                <Rectangle Fill="Black" Opacity=".5" />
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="{Binding BusyWaitingMessage, Mode=OneWay}" 
                           HorizontalAlignment="Center"
                           Style="{StaticResource FieldLabelStyle}"
                           FontWeight="SemiBold" FontSize="36" />
                    <ProgressBar IsIndeterminate="True" Margin="5" HorizontalAlignment="Stretch"
                             Height="10"/>
                </StackPanel>
            </Grid>
        </MapUI:MapLayoutPanel>

       <!-- Floating 'Working Online' Panel -->
        <Popup Grid.Row="2" PlacementTarget="{Binding ElementName=WorkOnlineButton}"
        Style="{StaticResource PopupStyle}"
               x:Name="OnlinePopup"
                IsOpen="{Binding ElementName=WorkOnlineButton, Path=IsChecked}" >
            <Border Style="{StaticResource TitleBarPopoverBorderStyle}">
                <panels:OnlineMapPanel DataContext="{StaticResource MainViewModel}" />
            </Border>
        </Popup>

        <!-- Floating 'Working Offline' Panel -->
        <Popup Grid.Row="2" x:Name="OfflinePopup"
        Style="{StaticResource PopupStyle}"
               PlacementTarget="{Binding ElementName=WorkOfflineButton}" StaysOpen="False"
                IsOpen="{Binding ElementName=WorkOfflineButton, Path=IsChecked}">
            <Border Style="{StaticResource TitleBarPopoverBorderStyle}" Effect="{x:Null}">
                <panels:MapPanel DataContext="{Binding Source={StaticResource MainViewModel}}"  />
            </Border>
        </Popup>

        <!-- Floating User Panel -->
        <Popup Grid.Row="2" x:Name="UserPopup"
               Style="{StaticResource PopupStyle}"
                HorizontalAlignment="Right" HorizontalOffset="-10"
               PlacementTarget="{Binding ElementName=UserPopupButton}" StaysOpen="False"
                IsOpen="{Binding ElementName=UserPopupButton, Path=IsChecked}">
            <Border Style="{StaticResource TitleBarPopoverBorderStyle}">
                <panels:UserAccountPanel DataContext="{Binding Source={StaticResource MainViewModel}, Path=AuthViewModel, Mode=TwoWay}"  />
            </Border>
        </Popup>
    </Grid>
</Window>
