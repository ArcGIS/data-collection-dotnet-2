<Window x:Class="Esri.ArcGISRuntime.ExampleApps.DataCollection.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:esri="http://schemas.esri.com/arcgis/runtime/2013"
        xmlns:utils="clr-namespace:Esri.ArcGISRuntime.ExampleApps.DataCollection.Shared.Utils"
        xmlns:converters="clr-namespace:Esri.ArcGISRuntime.ExampleApps.DataCollection.Shared.Converters"
        xmlns:localconverters="clr-namespace:Esri.ArcGISRuntime.ExampleApps.DataCollection.WPF.Converters"
        xmlns:local="clr-namespace:Esri.ArcGISRuntime.ExampleApps.DataCollection.WPF"
        xmlns:views="clr-namespace:Esri.ArcGISRuntime.ExampleApps.DataCollection.WPF.Views"
        xmlns:viewModels="clr-namespace:Esri.ArcGISRuntime.ExampleApps.DataCollection.Shared.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="{Binding Source={StaticResource MainViewModel}, Path=MapViewModel.ApplicationTitle}" Height="525" Width="790" MinHeight="650" MinWidth="900">
    <Window.Resources>
        <ResourceDictionary>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <converters:ConnectivityModeToVisibilityConverter x:Key="ConnectivityModeToVisibilityConverter"/>
            <converters:ConnectivityModeToColorConverter x:Key="ConnectivityModeToColorConverter"/>
            <converters:LocalizationConverter x:Key="LocalizationConverter"/>
            <localconverters:MapTitleConverter x:Key="MapTitleConverter"/>            
            <local:AttributeEditorDataTemplateSelector x:Key="AttributeEditorDataTemplateSelector"/>
            <System:Boolean x:Key="TrueValue">True</System:Boolean>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid DataContext="{StaticResource MainViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="300" MaxWidth="300"/>
            <ColumnDefinition Width="Auto" MinWidth="300" MaxWidth="300"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- MapView control -->
        <esri:MapView x:Name="MapView" Map="{Binding MapViewModel.Map, Mode=TwoWay}" 
                      Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3"
                      utils:MapViewExtensions.IdentifyController="{Binding IdentifyController}">
            <utils:MapViewExtensions.ViewpointController>
                <utils:ViewpointController Viewpoint="{Binding MapViewModel.AreaOfInterest, Source={StaticResource MainViewModel}, Mode=TwoWay}"/>
            </utils:MapViewExtensions.ViewpointController>
            <utils:MapViewExtensions.LocationDisplayController>
                <utils:LocationDisplayController DataSource="{Binding MapViewModel.LocationDataSource, Source={StaticResource MainViewModel}}"/>
            </utils:MapViewExtensions.LocationDisplayController>
        </esri:MapView>

        <!-- Compass control that displays when user rotates the map -->
        <esri:Compass GeoView="{Binding ElementName=MapView, Mode=OneWay}" AutoHide="True"
                      Margin="20"  Grid.Column="2" Grid.Row="1" />

        <!-- New feature overlay -->
        <Grid x:Name="NewFeatureOverlay" 
              Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3" 
              Visibility="{Binding IsNewFeatureBeingAdded, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="9*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Column="0" Grid.Row="0" Fill="Black" Opacity=".5"/>
            <Rectangle Grid.Column="0" Grid.Row="1" Fill="Black" Opacity=".5"/>
            <Rectangle Grid.Column="0" Grid.Row="2" Fill="Black" Opacity=".5"/>
            <Rectangle Grid.Column="1" Grid.Row="0" Fill="Black" Opacity=".5"/>
            <Rectangle Grid.Column="1" Grid.Row="2" Fill="Black" Opacity=".5"/>
            <Rectangle Grid.Column="2" Grid.Row="0" Fill="Black" Opacity=".5"/>
            <Rectangle Grid.Column="2" Grid.Row="1" Fill="Black" Opacity=".5"/>
            <Rectangle Grid.Column="2" Grid.Row="2" Fill="Black" Opacity=".5"/>
            <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=AddFeatureLabel_Line1}" HorizontalAlignment="Center" Foreground="White" FontSize="16"/>
                <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=AddFeatureLabel_Line2}" HorizontalAlignment="Center" Foreground="White" FontSize="16"/>
            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,50">
                <Image Source="pack://application:,,,/Images/GenericPin.png" 
                       Width="23" Height="34"/>
                <Image Source="pack://application:,,,/Images/PinShadow.png" 
                       Width="21" Height="5"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center"
                        Grid.Row="2" Grid.Column="1">
                <Button Content="Cancel" Style="{StaticResource MenuButtonStyle}" Margin="0,0,20,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:ChangePropertyAction TargetObject="{Binding .}" PropertyName="IsNewFeatureBeingAdded" Value="False"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Content="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=SaveButton_Text}" Command="{Binding SaveNewFeatureCommand}" 
                        Style="{StaticResource MenuButtonStyle}" Margin="20,0,0,0"/>
            </StackPanel>
        </Grid>

        <!-- Download view -->
        <views:DownloadView Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3" VisibleArea="{Binding ElementName=MapView, Path=VisibleArea}"
                            Visibility="{Binding DownloadViewModel, Converter={StaticResource NullToVisibilityConverter}}"/>

        <!-- Sync View -->
        <StackPanel Orientation="Vertical" VerticalAlignment="Center" Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3"
                    Visibility="{Binding SyncViewModel, Converter={StaticResource NullToVisibilityConverter}}" >
            <Grid Background="Green" MaxHeight="200" MaxWidth="350">
                <Grid.Effect>
                    <DropShadowEffect Opacity=".5" BlurRadius="20" ></DropShadowEffect>
                </Grid.Effect>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <ProgressBar Minimum="0" Maximum="100" Value="{Binding SyncViewModel.Progress}" 
                         Height="20" Width="300" Grid.Row="0" Margin="20" Foreground="#C37534"/>
                <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=SynchingMessage_Text}" HorizontalAlignment="Center" Foreground="White" FontSize="16"
                           Margin="0,0,0,20" Grid.Row="1"/>
                <Separator Grid.Row="1" VerticalAlignment="Bottom" Background="White"/>
                <Button Content="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=GenericNegativeButton_Content}" Grid.Row="2" Style="{StaticResource MenuButtonStyle}" Width="70" 
                        Command="{Binding SyncViewModel.CancelSyncCommand}"/>
            </Grid>
        </StackPanel>

        <!-- Title bar with top buttons-->
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Height="60"
              Background="{Binding ConnectivityMode, Converter={StaticResource ConnectivityModeToColorConverter}}">
            <Grid.Effect>
                <DropShadowEffect Opacity=".5" BlurRadius="20" ></DropShadowEffect>
            </Grid.Effect>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <!-- Application Title coming from the title of the webmap-->
            <!-- This is a workaround for bug in Runtime: OnPropertyChnaged doesn't fire on Map properties -->
            <TextBlock Foreground="White" FontSize="25" FontWeight="DemiBold" 
                       HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Margin="15,0,0,0">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource MapTitleConverter}">
                        <Binding Path="MapViewModel.Map.Item.Title" />
                        <Binding Path="MapViewModel.ApplicationTitle" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <!-- TODO: Replace button text with icons when received from Creative -->
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <!-- Current Location Button -->
                <Button Command="{Binding MapViewModel.MoveToCurrentLocationCommand}" 
                        Background="{Binding ConnectivityMode, Converter={StaticResource ConnectivityModeToColorConverter}}"
                        Width="60" HorizontalAlignment="Right" Style="{StaticResource MenuButtonStyle}" 
                        ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=ZoomButton_Tooltip}">
                    <Button.Content>
                        <Grid>
                            <!-- Show button as disabled if IsLocationStarted is false -->
                            <TextBlock Text="&#xE81D;"  FontFamily="Segoe MDL2 Assets" FontSize="25"/>
                            <TextBlock Text="&#xE894;"  FontFamily="Segoe MDL2 Assets" FontSize="25" 
                                       Visibility="{Binding MapViewModel.IsLocationStarted, 
                                Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}"/>
                        </Grid>
                    </Button.Content>
                </Button>
                <!-- Add Feature Button -->
                <Button Content="&#xE710;" Command="{Binding CreateFeatureCommand}" 
                        Background="{Binding ConnectivityMode, Converter={StaticResource ConnectivityModeToColorConverter}}"
                        Visibility="{Binding IsLocationOnlyMode, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}"
                        FontFamily="Segoe MDL2 Assets" Width="60" FontSize="25" HorizontalAlignment="Right" Style="{StaticResource MenuButtonStyle}" 
                        ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=AddFeature_Tooltip}"/>
                <!-- Open Menu Button -->
                <ToggleButton x:Name="toggleMenu" Content="&#xE712;" FontFamily="Segoe MDL2 Assets" FontSize="25" 
                              Background="{Binding ConnectivityMode, Converter={StaticResource ConnectivityModeToColorConverter}}"
                              Visibility="{Binding IsLocationOnlyMode, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}"
                              Width="60" HorizontalAlignment="Right" Style="{StaticResource ToggleButtonStyle}" 
                              ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=MoreTools_Tooltip}"/>
            </StackPanel>
        </Grid>

        <!-- Menu Panel -->
        <Grid Grid.Row="1" Grid.Column="2" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0, 5, 20, 0" Background="White" MaxWidth="300" MinWidth="100"
               Visibility="{Binding IsChecked, ElementName=toggleMenu,  Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.Effect>
                <DropShadowEffect Opacity=".5" BlurRadius="20"/>
            </Grid.Effect>
            <StackPanel x:Name="AuthStackPanel" Orientation="Horizontal" Grid.Row="0" Background="Green">
                <Ellipse Height="50" Width="50" Margin="10"  Visibility="{Binding AuthenticatedUser, Converter={StaticResource NullToVisibilityConverter}}" >
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding AuthenticatedUser.ThumbnailUri}"/>
                    </Ellipse.Fill>
                </Ellipse>
                <TextBlock Text="&#xE77B;" Visibility="{Binding AuthenticatedUser, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}" 
                           FontFamily="Segoe MDL2 Assets" FontSize="25" Foreground="White" Margin="10, 0, 10, 0" VerticalAlignment="Center"/>

                <!-- Sign In Button -->
                <Button Content="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=LogInButton_Text}" 
                        Command="{Binding LoginCommand}" Margin="0,0,10,0" 
                        Visibility="{Binding AuthenticatedUser, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}" 
                        HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="25"  Style="{StaticResource MenuButtonStyle}">
                </Button>

                <!-- Sing Out Button -->
                <Button Command="{Binding LogOutCommand}" Visibility="{Binding AuthenticatedUser, Converter={StaticResource NullToVisibilityConverter}}" Margin="0, 0, 10, 0"
                            Style="{StaticResource MenuButtonStyle}"  FontSize="25" HorizontalAlignment="Center">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=LogOutButton_Text}"  
                                   FontSize="25" Margin="0, 0, 10, 0" VerticalAlignment="Center" Padding="5"/>
                        <TextBlock Text="{Binding AuthenticatedUser.FullName}" Foreground="White" FontSize="10" Padding="15, 0, 15, 5" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </StackPanel>

            <StackPanel Orientation="Vertical" Grid.Row="1" Background="White">
                <!-- Working online button and text -->
                <Button Style="{StaticResource MenuButtonStyle}" HorizontalAlignment="Left" Background="#C37534" Margin="15, 5, 15, 5"
                        Visibility="{Binding ConnectivityMode, Converter={StaticResource ConnectivityModeToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&#xEC3F;" FontFamily="Segoe MDL2 Assets" FontSize="25" Margin="10, 0, 0, 0" VerticalAlignment="Center" Padding="5"/>
                        <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=WorkingOnline_Label}" 
                                   FontSize="19" Margin="0, 0, 10, 0" VerticalAlignment="Center" Padding="5"/>
                    </StackPanel>
                </Button>

                <!-- Work online button and text -->
                <Button Command="{Binding WorkOnlineCommand}" CommandParameter="{Binding ElementName=MapView, Path=VisibleArea}" Style="{StaticResource MenuButtonStyle}" Background="White" Foreground="Black" 
                        Visibility="{Binding ConnectivityMode, Converter={StaticResource ConnectivityModeToVisibilityConverter}, ConverterParameter=Inverse}" Margin="15, 5, 15, 5"
                        HorizontalAlignment="Left">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&#xEC3F;" FontFamily="Segoe MDL2 Assets" FontSize="25" Margin="10, 0, 0, 0" VerticalAlignment="Center" Padding="5"/>
                        <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=WorkOnline_Button}"
                                   FontSize="19" Margin="0, 0, 10, 0" VerticalAlignment="Center" Padding="5"/>
                    </StackPanel>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:ChangePropertyAction TargetObject="{Binding ElementName=toggleMenu}" PropertyName="IsChecked" Value="False"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Separator/>

                <!-- Working offline button and text -->
                <Button Style="{StaticResource MenuButtonStyle}" HorizontalAlignment="Left" Background="#C37534" Margin="15, 5, 15, 5" 
                        Visibility="{Binding ConnectivityMode, Converter={StaticResource ConnectivityModeToVisibilityConverter}, ConverterParameter=Inverse}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&#xEB5E;" FontFamily="Segoe MDL2 Assets" FontSize="25"  Margin="10, 0, 0, 0" VerticalAlignment="Center" Padding="5"/>
                        <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=WorkingOffline_Label}" 
                                   FontSize="19" Margin="0, 0, 10, 0"  VerticalAlignment="Center" Padding="5"/>
                    </StackPanel>
                </Button>

                <!-- Work offline button and text -->
                <Button Command="{Binding WorkOfflineCommand}" Style="{StaticResource MenuButtonStyle}" 
                        Background="White" Foreground="Black" HorizontalAlignment="Left" Margin="15, 5, 15, 5" 
                        Visibility="{Binding ConnectivityMode, Converter={StaticResource ConnectivityModeToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&#xEB5E;" FontFamily="Segoe MDL2 Assets" FontSize="25"  Margin="10, 0, 0, 0" VerticalAlignment="Center" Padding="5"/>
                        <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=WorkOffline_Button}" 
                                   FontSize="19" Margin="0, 0, 10, 0"  VerticalAlignment="Center" Padding="5"/>
                    </StackPanel>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:ChangePropertyAction TargetObject="{Binding ElementName=toggleMenu}" PropertyName="IsChecked" Value="False"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <!-- Synchronize button and text -->
                <Button Style="{StaticResource MenuButtonStyle}" Background="White" Foreground="Black" HorizontalAlignment="Left" Margin="15, 5, 15, 5" 
                         Command="{Binding SyncMapCommand}" 
                        Visibility="{Binding OfflineMap, Converter={StaticResource NullToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&#xE895;" FontFamily="Segoe MDL2 Assets" FontSize="25" Foreground="Black" Margin="10, 0, 0, 0" VerticalAlignment="Center" Padding="5"/>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=SyncButton_Text}"
                                       FontSize="19" Margin="0, 0, 10, 0"  VerticalAlignment="Center" Padding="5"/>
                            <TextBlock Text="{Binding SyncDate}" FontSize="10" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:ChangePropertyAction TargetObject="{Binding ElementName=toggleMenu}" PropertyName="IsChecked" Value="False"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <!-- Delete offline map button and text -->
                <Button Style="{StaticResource MenuButtonStyle}" Background="White" Foreground="Black" HorizontalAlignment="Left" Margin="15, 5, 15, 5" 
                        Command="{Binding DeleteOfflineMapCommand}" CommandParameter="{StaticResource TrueValue}" 
                         Visibility="{Binding OfflineMap, Converter={StaticResource NullToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&#xE74D;" FontFamily="Segoe MDL2 Assets" FontSize="25"  Margin="10, 0, 0, 0" VerticalAlignment="Center" Padding="5"/>
                        <TextBlock Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=DeleteMapButton_Text}"
                                   FontSize="19" Margin="0, 0, 10, 0"  VerticalAlignment="Center" Padding="5"/>
                    </StackPanel>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:ChangePropertyAction TargetObject="{Binding ElementName=toggleMenu}" PropertyName="IsChecked" Value="False"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Popup containing identified feature information -->
        <Grid Visibility="{Binding IdentifiedFeatureViewModel, Converter={StaticResource NullToVisibilityConverter}}"
              Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="300"/>
            </Grid.ColumnDefinitions>
            <Grid VerticalAlignment="Center" Margin="20" Background="White" MaxWidth="300" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.Effect>
                    <DropShadowEffect Opacity=".5" BlurRadius="20"/>
                </Grid.Effect>
                <TextBlock Text="{Binding IdentifiedFeatureViewModel.PopupManager.Title}" 
                       Background="Green" Foreground="White" FontSize="20" Padding="15, 10, 5, 5" Grid.Row="0"/>
                <Button Content="&#xE8bB;" Command="{Binding ClearIdentifiedFeatureCommand}"
                    Visibility="{Binding IdentifiedFeatureViewModel.EditViewModel, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}"
                    Grid.Row="0" HorizontalAlignment="Right" Padding="10, 10, 10, 5" 
                        ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=CloseButton_Tooltip}"
                    FontFamily="Segoe MDL2 Assets" FontSize="15" Style="{StaticResource MenuButtonStyle}" />
                <views:IdentifiedFeaturePopup Grid.Row="1" DataContext="{Binding}"/>
            </Grid>

            <!-- Popup containing origin table information -->
            <Grid  VerticalAlignment="Center" Margin="20" MaxWidth="300" Grid.Column="1"
              Visibility="{Binding IdentifiedFeatureViewModel.SelectedOriginRelationship, Converter={StaticResource NullToVisibilityConverter}}" >
                <Grid.Effect>
                    <DropShadowEffect Opacity=".5" BlurRadius="20"/>
                </Grid.Effect>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding IdentifiedFeatureViewModel.SelectedOriginRelationship.SelectedRecordPopupManager.Title}" 
                       Background="Green" Foreground="White" FontSize="20" Padding="15, 10, 5, 5" Grid.Row="0"/>
                <Button Content="&#xE8bB;" Command="{Binding IdentifiedFeatureViewModel.ClearRelationshipsCommand}"
                    Visibility="{Binding EditViewModel, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}"
                    FontFamily="Segoe MDL2 Assets" FontSize="15" Style="{StaticResource MenuButtonStyle}" 
                    Padding="10, 10, 10, 5" Grid.Row="0" HorizontalAlignment="Right" 
                        ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=CloseButton_Tooltip}" />
                <views:OriginRelatedRecordPopup Grid.Row="1" DataContext="{Binding}" />
            </Grid>

            <!-- Popup containing destination table information -->
            <Grid  VerticalAlignment="Center" Margin="20" MaxWidth="300" Grid.Column="1"
              Visibility="{Binding IdentifiedFeatureViewModel.SelectedDestinationRelationship, Converter={StaticResource NullToVisibilityConverter}}" >
                <Grid.Effect>
                    <DropShadowEffect Opacity=".5" BlurRadius="20"/>
                </Grid.Effect>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding IdentifiedFeatureViewModel.SelectedDestinationRelationship.PopupManager.Title}" 
                       Background="Green" Foreground="White" FontSize="20" Padding="15, 10, 5, 5" Grid.Row="0"/>
                <Button Content="&#xE8bB;" Command="{Binding IdentifiedFeatureViewModel.ClearRelationshipsCommand}"
                    FontFamily="Segoe MDL2 Assets" FontSize="15" Style="{StaticResource MenuButtonStyle}" 
                    Padding="10, 10, 10, 5" Grid.Row="0" HorizontalAlignment="Right" 
                        ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=CloseButton_Tooltip}"/>
                <views:DestinationRelatedRecordPopup Grid.Row="1" DataContext="{Binding}"/>
            </Grid>
        </Grid>
        <!-- Login Window -->
        <views:LoginWindow Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="3"/>
    </Grid>
</Window>
