<ctrl:CardBase xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        x:Class="Esri.ArcGISRuntime.OpenSourceApps.DataCollection.WPF.Views.IdentifiedFeaturePopup"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.Shared.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:utilities="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.Shared.Utilities"
    xmlns:views="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.WPF.Views"
    d:DesignHeight="600"
    d:DesignWidth="400"
               x:Name="Self"
    xmlns:ctrl="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.CustomControls;assembly=Esri.ArcGISRuntime.OpenSourceApps.DataCollection.CustomControls"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:LocalizationConverter x:Key="LocalizationConverter" />
            <converters:DisplayedFieldsToRealDisplayedFieldsConverter x:Key="PopupFieldFormatConverter" />
            <utilities:AttributeEditorDataTemplateSelector x:Key="AttributeEditorDataTemplateSelector" />
            <Style TargetType="TextBlock" x:Key="PopupSectionHeaderStyle">
                <Setter Property="Foreground" Value="{DynamicResource tint}" />
                <Setter Property="FontSize" Value="{StaticResource chrome-font-size-large}" />
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Styles/DataTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="{DynamicResource content-background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Border Style="{StaticResource CardTitleBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Source="{Binding IdentifiedFeatureViewModel.IconImageSource}" Style="{StaticResource TitleBarIconImageStyle}" />
                <TextBlock Text="{Binding IdentifiedFeatureViewModel.PopupManager.Title}" Style="{StaticResource CardTitle}"
                           Grid.Column="1" />
                <Button Command="{Binding ElementName=Self, Path=ToggleStateCommand}"
                        Grid.Column="2"
                        Visibility="{Binding ElementName=Self, Path=ParentPanel.ShouldEnableCardMaximize, Converter={StaticResource BoolToVisibilityConverter}}"
                        Style="{StaticResource CardCloseStyle}">
                    <Path Data="{StaticResource icon-caret-square-up-16}" Style="{StaticResource PathIconBase}"  />
                </Button>
                <Button Command="{Binding ElementName=Self, Path=ToggleStateCommand}"
                        Grid.Column="2"
                        Visibility="{Binding ElementName=Self, Path=ParentPanel.ShouldEnableCardMinimize, Converter={StaticResource BoolToVisibilityConverter}}"
                        Style="{StaticResource CardCloseStyle}">
                    <Path Data="{StaticResource icon-caret-square-down-16}" Style="{StaticResource PathIconBase}"  />
                </Button>
                <Button Command="{Binding ClearIdentifiedFeatureCommand, Mode=OneWay}" 
                        Grid.Column="3"
                        Style="{StaticResource CardCloseStyle}">
                    <Path Data="{StaticResource icon-x-16}" Style="{StaticResource PathIconBase}"  />
                </Button>
            </Grid>
        </Border>
        <TabControl BorderThickness="0" 
                    Grid.Row="1"
                    DataContext="{Binding IdentifiedFeatureViewModel}"
                    Background="{DynamicResource content-background}" 
                    Foreground="{DynamicResource content-foreground}">
            <TabItem Header="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=DetailsHeading}" 
                     Style="{StaticResource MinimalistTabItemStyle}">
                <!--  Attribute information for the identified feature  -->
                <ScrollViewer
            x:Name="DetailsView"
            Grid.Row="1" Padding="{StaticResource padding-default}"
            HorizontalScrollBarVisibility="Disabled" VerticalAlignment="Stretch"
            PanningMode="VerticalOnly"
            VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <TextBlock Style="{StaticResource PopupSectionHeaderStyle}" 
                               Margin="{StaticResource margin-bottom-only}"
                               Text="Attributes" />
                        <!--  View Mode  -->
                        <!--  List of attributes from identified feature  -->
                        <ItemsControl
                    Grid.Row="0"
                    ItemsSource="{Binding PopupManager.DisplayedFields, Converter={StaticResource PopupFieldFormatConverter}}"
                    Visibility="{Binding EditViewModel, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Style="{StaticResource FieldLabelStyle}"
                                                   Text="{Binding Field.Label}" />
                                        <TextBox Style="{StaticResource FieldValueStyle}"
                                                 Text="{Binding ReformattedValue, Mode=OneWay}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <Border Visibility="Collapsed">
                            <TextBlock Style="{StaticResource PopupSectionHeaderStyle}"
                                       Text="{Binding ., Converter={StaticResource LC}, ConverterParameter=FeaturePopup_DestinationRelationships_Header}"
                                       Margin="{StaticResource margin-top-bottom}"
                                       Visibility="{Binding HasDestinationRelationships, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        </Border>
                        <!--  View Mode  -->
                        <!--  List of relationships where identified feature is destination  -->
                        <ItemsControl
                    Grid.Row="1"
                    HorizontalContentAlignment="Stretch"
                    ItemsSource="{Binding DestinationRelationships}"
                    Visibility="{Binding EditViewModel, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding PopupManager.Title}" 
                                                   Style="{StaticResource FieldLabelStyle}"
                                                   Visibility="{Binding PopupManager, Converter={StaticResource NullToVisibilityConverter}}"/>
                                        <Border Style="{StaticResource RecordCardBorderStyle}" Visibility="{Binding PopupManager, Converter={StaticResource NullToVisibilityConverter}}">
                                            <Grid Visibility="{Binding PopupManager, Converter={StaticResource NullToVisibilityConverter}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Grid.Column="0">
                                                    <StackPanel DataContext="{Binding PopupManager.DisplayedFields[0], Converter={StaticResource PopupFieldFormatConverter}}">
                                                        <TextBlock Style="{StaticResource FieldLabelStyle}"
                                                           Text="{Binding Field.Label}" />
                                                        <TextBlock Style="{StaticResource FieldValueReadonlyStyle}"
                                                           Text="{Binding ReformattedValue}" />
                                                    </StackPanel>
                                                    <StackPanel DataContext="{Binding PopupManager.DisplayedFields[1], Converter={StaticResource PopupFieldFormatConverter}}">
                                                        <TextBlock Style="{StaticResource FieldLabelStyle}"
                                                           Text="{Binding Field.Label}" />
                                                        <TextBlock Style="{StaticResource FieldValueReadonlyStyle}"
                                                           Text="{Binding ReformattedValue, Converter={StaticResource PopupFieldFormatConverter}}" />
                                                    </StackPanel>
                                                </StackPanel>
                                                <Button Grid.Column="1"
                                                HorizontalAlignment="Right"
                                                Command="{Binding DataContext.IdentifiedFeatureViewModel.SetSelectedDestinationRelationshipCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"
                                                Style="{StaticResource FieldAccessoryButton}"
                                                ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=ShowDetailButton_Tooltip}">
                                                    <Path Data="{StaticResource icon-chevron-right-16}" 
                                                          Width="12" Height="12"
                                                          Style="{StaticResource CardButtonIconStyle}" />
                                                </Button>
                                            </Grid>
                                        </Border>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!--  View Mode  -->
                        <!--  List of relationships where identified feature is origin  -->
                        <ItemsControl
                    Grid.Row="2"
                    HorizontalContentAlignment="Stretch"
                    ItemsSource="{Binding OriginRelationships}"
                    Visibility="{Binding EditViewModel, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Style="{StaticResource PopupSectionHeaderStyle}" 
                                                   Margin="{StaticResource margin-top-bottom}">
                                            <Run Text="{Binding RelatedTable.PopupDefinition.Title}" />
                                            <Run Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=RelatedRecordTableSuffix}" />
                                        </TextBlock>
                                        <Button Style="{StaticResource MapOverlayButtonStyle}" Margin="{StaticResource margin-top-bottom}"
                                                    Command="{Binding DataContext.IdentifiedFeatureViewModel.AddOriginRelatedFeatureCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                    CommandParameter="{Binding .}"
                                                    ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=AddRelatedRecord_Tooltip}">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <Path Data="{StaticResource icon-plus-circle-16}" 
                                                      Fill="{DynamicResource tint}"
                                                      Style="{StaticResource CardButtonIconStyle}" />
                                                <TextBlock Style="{StaticResource MapOverlayButtonText}" Margin="4,0,4,0">
                                                    <Run Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=AddRelatedRecord_Button_part1}" />
                                                    <Run Text="{Binding RelatedTable.PopupDefinition.Title}" />
                                                    <Run Text="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=AddRelatedRecord_Button_part3}" />
                                                </TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <ItemsControl ItemsSource="{Binding OriginRelationshipViewModelCollection}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Border Visibility="{Binding IsNewFeature, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}"
                                                            Style="{StaticResource RecordCardBorderStyle}">
                                                        <Grid Visibility="{Binding IsNewFeature, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*" />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <StackPanel
                                                    Grid.Column="0"
                                                    DataContext="{Binding PopupManager}"
                                                    Orientation="Vertical">
                                                                <StackPanel DataContext="{Binding DisplayedFields[0], Converter={StaticResource PopupFieldFormatConverter}}">
                                                                    <TextBlock Style="{StaticResource FieldLabelStyle}"
                                                                           Text="{Binding Field.Label}" />
                                                                    <TextBlock Style="{StaticResource FieldValueReadonlyStyle}"
                                                                           Text="{Binding ReformattedValue}" />
                                                                </StackPanel>
                                                                <StackPanel DataContext="{Binding DisplayedFields[1], Converter={StaticResource PopupFieldFormatConverter}}">
                                                                    <TextBlock Style="{StaticResource FieldLabelStyle}"
                                                                           Text="{Binding Field.Label}" />
                                                                    <TextBlock Style="{StaticResource FieldValueReadonlyStyle}"
                                                                           Text="{Binding ReformattedValue}" />
                                                                </StackPanel>
                                                                <StackPanel DataContext="{Binding DisplayedFields[2], Converter={StaticResource PopupFieldFormatConverter}}">
                                                                    <TextBlock Style="{StaticResource FieldLabelStyle}"
                                                                           Text="{Binding Field.Label}" />
                                                                    <TextBlock Style="{StaticResource FieldValueReadonlyStyle}"
                                                                           Text="{Binding ReformattedValue}" />
                                                                </StackPanel>
                                                            </StackPanel>
                                                            <Button Grid.Column="1"
                                                                Command="{Binding DataContext.IdentifiedFeatureViewModel.SetSelectedOriginRelationshipCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                                CommandParameter="{Binding PopupManager}"
                                                                Style="{StaticResource FieldAccessoryButton}"
                                                                ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=ShowDetailButton_Tooltip}">
                                                                <Path Data="{StaticResource icon-chevron-right-16}" 
                                                                      Width="12" Height="12"
                                                                      Style="{StaticResource CardButtonIconStyle}" />
                                                            </Button>
                                                        </Grid>
                                                    </Border>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!--  Edit Mode  -->
                        <!--  List of attributes from identified feature  -->
                        <ItemsControl
                    Grid.Row="0"
                    ItemTemplateSelector="{StaticResource AttributeEditorDataTemplateSelector}"
                    ItemsSource="{Binding Fields}"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    Visibility="{Binding EditViewModel, Converter={StaticResource NullToVisibilityConverter}}" />

                        <!--  Edit Mode  -->
                        <!--  List of relationships where identified feature is destination  -->
                        <ItemsControl
                    Grid.Row="1"
                    ItemsSource="{Binding DestinationRelationships}"
                    Visibility="{Binding EditViewModel, Converter={StaticResource NullToVisibilityConverter}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <StackPanel>
                                            <TextBlock Style="{StaticResource FieldLabelStyle}"
                                                       Text="{Binding FeatureTable.TableName}" />
                                            <ComboBox HorizontalAlignment="Stretch"
                                                      ItemsSource="{Binding OrderedAvailableValues}"
                                                      SelectedItem="{Binding DataContext.PopupManager, RelativeSource={RelativeSource AncestorType=StackPanel}}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Grid.Column="0">
                                                            <StackPanel DataContext="{Binding DisplayedFields[0], Converter={StaticResource PopupFieldFormatConverter}}">
                                                                <TextBlock Style="{StaticResource FieldLabelStyle}"
                                                                           Text="{Binding Field.Label}" />
                                                                <TextBlock Style="{StaticResource FieldValueReadonlyStyle}"
                                                                           Text="{Binding ReformattedValue}" />
                                                            </StackPanel>
                                                            <StackPanel DataContext="{Binding DisplayedFields[1], Converter={StaticResource PopupFieldFormatConverter}}">
                                                                <TextBlock Style="{StaticResource FieldLabelStyle}"
                                                                           Text="{Binding Field.Label}" />
                                                                <TextBlock Style="{StaticResource FieldValueReadonlyStyle}"
                                                                           Text="{Binding ReformattedValue}" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="{Binding .,Converter={StaticResource LocalizationConverter}, ConverterParameter=AttachmentsHeading}" 
                     x:Name="AttachmentsTabItem"
                     Style="{StaticResource MinimalistTabItemStyle}">
                <!--  Attachments view  -->
                <views:AttachmentsView
            x:Name="AttachmentsView"
            DataContext="{Binding ., Mode=OneWay}"
            VerticalAlignment="Stretch"
             />
            </TabItem>
        </TabControl>

        <!--  Bottom Buttons  -->
        <Grid Grid.Row="2" Style="{StaticResource CardControlStripStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--  Bottom buttons to edit or delete record  -->
            <Button
                Grid.Column="1"
                HorizontalAlignment="Right"
                Command="{Binding EditFeatureCommand}"
                Style="{StaticResource CardControlStripButtonStyle}"
                ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=EditRecord_Tooltip}"
                Visibility="{Binding EditViewModel, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}">
                <Path Data="{StaticResource icon-pencil-16}" Style="{StaticResource CardButtonIconStyle}" />
            </Button>
            <Button
                Grid.Column="2"
                HorizontalAlignment="Right"
                Command="{Binding DataContext.DeleteFeatureCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                CommandParameter="{Binding}"
                Style="{StaticResource CardControlStripButtonStyle}"
                ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=DeleteRecord_Tooltip}"
                Visibility="{Binding EditViewModel, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}">
                <Path Data="{StaticResource icon-trash-16}" Style="{StaticResource CardButtonIconStyle}"/>
            </Button>

            <!--  Bottom buttons to save or discard changes to record  -->
            <Button
                Grid.Column="1"
                Command="{Binding SaveEditsCommand}"
                Style="{StaticResource CardControlStripButtonStyle}"
                ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=SaveEdits_Tooltip}"
                Visibility="{Binding EditViewModel, Converter={StaticResource NullToVisibilityConverter}}">
                <Path Data="{StaticResource icon-save-16}" Style="{StaticResource CardButtonIconStyle}"/>
            </Button>
            <Button
                Grid.Column="2"
                HorizontalAlignment="Right"
                Command="{Binding DataContext.CancelEditsCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                CommandParameter="{Binding .}"
                Style="{StaticResource CardControlStripButtonStyle}"
                ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=CancelEdits_Tooltip}"
                Visibility="{Binding EditViewModel, Converter={StaticResource NullToVisibilityConverter}}">
                <Path Data="{StaticResource icon-x-16}" Style="{StaticResource CardButtonIconStyle}"/>
            </Button>

            <!--  Button to add new attachment  -->
            <!--  Clicking this button switches user to Attachments tab, begins edit mode, and starts up a browse dialog  -->
            <Button
                Grid.Column="0"
                HorizontalAlignment="Left"
                Click="AddAttachmentButton_Click"
                Command="{Binding EditFeatureCommand}"
                Visibility="{Binding ElementName=AttachmentsTabItem, Path=IsSelected, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                Style="{StaticResource CardControlStripButtonStyle}"
                ToolTip="{Binding ., Converter={StaticResource LocalizationConverter}, ConverterParameter=AddAttachment_Tooltip}">
                <Path Data="{StaticResource icon-folder-open-16}" Style="{StaticResource CardButtonIconStyle}"/>
            </Button>
        </Grid>

        <!--  Hidden element used to pass new attachment path to the viewmodel  -->
        <TextBlock
            x:Name="AttachmentPathTextBlock"
            Text="{Binding AttachmentsViewModel.NewAttachmentPath, Mode=TwoWay}"
            Visibility="Collapsed" />
    </Grid>
</ctrl:CardBase>