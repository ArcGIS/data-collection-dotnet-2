<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.Shared.Converters"
    xmlns:localconverters="clr-namespace:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.WPF.Converters">

    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <localconverters:ConvertValueToCodedValueDomainValue x:Key="ConvertValueToCodedValueDomainValue" />

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TemporaryPanelheaderTextboxStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Green" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontSize" Value="15" />
    </Style>

    <SolidColorBrush x:Key="Button.Static.Background" Color="Green" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="Green" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="DarkGreen" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="DarkGreen" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#C37534" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="DarkGreen" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="LightGray" />
    <SolidColorBrush x:Key="Window.Background" Color="White" />

    <Style x:Key="TabButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="SegoeUISymbol" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="ControlBorder" BorderBrush="Transparent" BorderThickness="0,0,0,3">
                        <Grid SnapsToDevicePixels="true" >
                            <Rectangle x:Name="BackgroundVisual" Fill="{TemplateBinding Background}" />
                            <Rectangle
                            x:Name="PressedVisual"
                            Fill="SlateGray"
                            Opacity="0" />
                            <Rectangle
                            x:Name="DisabledVisual"
                            Fill="{DynamicResource Button.Disabled.Background}"
                            Opacity="0" />
                            <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="SlateGray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            <Setter TargetName="DisabledVisual" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="ControlBorder" Property="BorderBrush" Value="SlateGray" />
                            <Setter TargetName="contentPresenter" Property="TextElement.FontWeight" Value="SemiBold" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="ControlBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontFamily" Value="SegoeUISymbol" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="true">
                        <Rectangle x:Name="BackgroundVisual" Fill="{TemplateBinding Background}" />
                        <Rectangle
                            x:Name="PressedVisual"
                            Fill="{DynamicResource Button.Pressed.Background}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="DisabledVisual"
                            Fill="{DynamicResource Button.Disabled.Background}"
                            Opacity="0" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PressedVisual" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PressedVisual" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            <Setter TargetName="DisabledVisual" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style x:Key="MenuButtonIconStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
    </Style>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="FontFamily" Value="SegoeUISymbol" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid SnapsToDevicePixels="true">
                        <Rectangle x:Name="BackgroundVisual" Fill="{TemplateBinding Background}" />
                        <Rectangle
                            x:Name="PressedVisual"
                            Fill="{DynamicResource Button.Pressed.Background}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="DisabledVisual"
                            Fill="{DynamicResource Button.Disabled.Background}"
                            Opacity="0" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PressedVisual" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PressedVisual" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            <Setter TargetName="DisabledVisual" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="32" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="Border"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="0" />
                        <Border
                            Grid.Column="0"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="10"
                            CornerRadius="0" />
                        <Path
                            x:Name="Arrow"
                            Grid.Column="1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 5 7 L 10 0 Z"
                            Fill="{TemplateBinding Foreground}"
                            Stroke="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="True" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Background" Value="White" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            ClickMode="Press"
                            Focusable="false"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="10,3,30,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Focusable="True"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            Visibility="Hidden" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="White"
                                    BorderBrush="Gray"
                                    BorderThickness="1" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border
                        Name="Border"
                        Margin="2"
                        Padding="5"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        CornerRadius="0">

                        <TextBlock TextAlignment="Center">
                            <ContentPresenter />
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Green" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SidePanelContainerGrid" TargetType="Grid">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="250" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <!--  Data templates for all the field types used in editing features  -->
    <DataTemplate x:Key="StringTemplate" x:Name="StringTemplate">
        <StackPanel>
            <TextBlock Style="{StaticResource FieldLabelStyle}"
                       Text="{Binding PopupFieldValue.Field.Label}" />
            <TextBox Style="{StaticResource EditableFieldValueStyle}" IsEnabled="True"
                     Text="{Binding PopupFieldValue.Value, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Style="{StaticResource ValidationErrorTextStyle}"
                       Text="{Binding PopupFieldValue.ValidationError.Message}"
                       Visibility="{Binding PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="DateTemplate" x:Name="DateTemplate">
        <StackPanel>
            <TextBlock Style="{StaticResource FieldLabelStyle}"
                       Text="{Binding PopupFieldValue.Field.Label}" />
            <DatePicker Style="{StaticResource DatePickerValueStyle}"
                        Text="{Binding PopupFieldValue.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Style="{StaticResource ValidationErrorTextStyle}"
                       Text="{Binding PopupFieldValue.ValidationError.Message}"
                       Visibility="{Binding PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="DoubleTemplate" x:Name="DoubleTemplate">
        <StackPanel>
            <TextBlock Style="{StaticResource FieldLabelStyle}"
                       Text="{Binding PopupFieldValue.Field.Label}" />
            <TextBox Style="{StaticResource EditableFieldValueStyle}"
                     Text="{Binding PopupFieldValue.Value, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Style="{StaticResource ValidationErrorTextStyle}"
                       Text="{Binding PopupFieldValue.ValidationError.Message}"
                       Visibility="{Binding PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="IntTemplate" x:Name="IntTemplate">
        <StackPanel>
            <TextBlock Style="{StaticResource FieldLabelStyle}"
                       Text="{Binding PopupFieldValue.Field.Label}" />
            <TextBox Style="{StaticResource EditableFieldValueStyle}"
                     Text="{Binding PopupFieldValue.Value, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Style="{StaticResource ValidationErrorTextStyle}"
                       Text="{Binding PopupFieldValue.ValidationError.Message}"
                       Visibility="{Binding PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="CodedValueDomainTemplate" x:Name="CodedValueDomainTemplate">
        <StackPanel>
            <TextBlock Style="{StaticResource FieldLabelStyle}"
                       Text="{Binding PopupFieldValue.Field.Label}" />
            <ComboBox Style="{StaticResource ComboboxValueStyle}"
                      ItemsSource="{Binding OriginalField.Domain.CodedValues}">
                <ComboBox.SelectedItem>
                    <MultiBinding Converter="{StaticResource ConvertValueToCodedValueDomainValue}">
                        <Binding Mode="OneWay" Path="OriginalField.Domain.CodedValues" />
                        <Binding Mode="TwoWay" Path="PopupFieldValue.Value" />
                    </MultiBinding>
                </ComboBox.SelectedItem>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="IntegerRangeDomainTemplate" x:Name="IntegerRangeDomainTemplate">
        <StackPanel>
            <TextBlock Style="{StaticResource FieldLabelStyle}"
                       Text="{Binding PopupFieldValue.Field.Label}" />
            <TextBox Style="{StaticResource EditableFieldValueStyle}"
                     Text="{Binding PopupFieldValue.Value, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Style="{StaticResource ValidationErrorTextStyle}"
                       Text="{Binding PopupFieldValue.ValidationError.Message}"
                       Visibility="{Binding PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="DoubleRangeDomainTemplate" x:Name="DoubleRangeDomainTemplate">
        <StackPanel>
            <TextBlock Style="{StaticResource FieldLabelStyle}"
                       Text="{Binding PopupFieldValue.Field.Label}" />
            <TextBox Style="{StaticResource EditableFieldValueStyle}"
                     Text="{Binding PopupFieldValue.Value, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Style="{StaticResource ValidationErrorTextStyle}"
                       Text="{Binding PopupFieldValue.ValidationError.Message}"
                       Visibility="{Binding PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}" />
        </StackPanel>
    </DataTemplate>
    <Style x:Key="CardControlStripStyle" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource chrome-background}" />
    </Style>
    <Style x:Key="CardControlStripButtonStyle" TargetType="Button" BasedOn="{StaticResource ActionButtonBase}">
        <Setter Property="Background" Value="{StaticResource chrome-background}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Margin" Value="0" />
    </Style>
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Theming/Constants.xaml" />
        <ResourceDictionary Source="Theming/ControlStyle.xaml" />
        <ResourceDictionary Source="Theming/Cards.xaml" />
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>