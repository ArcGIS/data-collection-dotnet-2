<Page
    x:Class="Esri.ArcGISRuntime.OpenSourceApps.DataCollection.UWP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.Shared.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:esri="using:Esri.ArcGISRuntime.UI.Controls"
    xmlns:localConverters="using:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.UWP.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:Esri.ArcGISRuntime.Toolkit.UI.Controls"
    xmlns:utils="using:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.Shared.Utils"
    xmlns:views="using:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.UWP.Views"
    xmlns:mapping="using:Esri.ArcGISRuntime.Mapping"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls" 
    xmlns:ext="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:panels="using:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.CustomControls.Panels" xmlns:cards="using:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.CustomControls.Cards" xmlns:popups="using:Esri.ArcGISRuntime.OpenSourceApps.DataCollection.UWP.Views.Popups"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters:EmptyCollectionToVisibilityConverter x:Key="EmptyCollectionToVisibilityConverter" />
            <converters:PointToDoubleConverter x:Key="PointToDoubleConverter" />
            <converters:NullToBoolConverter x:Key="NullToBoolConverter" />
            <converters:LocalizationConverter x:Key="LocalizationConverter" />
            <converters:ConnectivityModeToVisibilityConverter x:Key="ConnectivityModeToVisibilityConverter" />
            <localConverters:TitleBarConnectivityModeToColorConverter x:Key="ConnectivityModeToColorConverter" />
            <panels:ResponsiveValueConverter x:Key="RVC" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="./CalciteIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>
    <Grid Background="{StaticResource chrome-background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <views:TitleBar Grid.Row="0" MainViewModel="{x:Bind MainViewModel, Mode=OneWay}" />
        
        <!-- Map Area -->
        <panels:MapLayoutPanel x:Name="MapLayoutPanel" Grid.Row="1"
                               WidthBreakpoint="720">
            <!-- Map -->
            <!-- TODO: Do IdentifyController, MapAccessoryViewModel need to be one-way bound? -->
            <esri:MapView x:Name="MapView"
                          panels:MapLayoutPanel.LayoutRole="BackgroundView"
                          IsAttributionTextVisible="False"
                          utils:MapViewExtensions.IdentifyController="{x:Bind MainViewModel.IdentifyController, Mode=OneWay}"
                          utils:MapViewExtensions.MapAccessoryViewModel="{x:Bind MainViewModel.MapAccessoryViewModel, Mode=OneWay}"
                          DataContext="{x:Bind MainViewModel}"
                          Map="{x:Bind MainViewModel.MapViewModel.Map, Mode=OneWay}">
                <utils:MapViewExtensions.ViewpointController>
                    <utils:ViewpointController Viewpoint="{Binding MapViewModel.AreaOfInterest, Mode=TwoWay}" />
                </utils:MapViewExtensions.ViewpointController>
                <utils:MapViewExtensions.LocationDisplayController>
                    <utils:LocationDisplayController DataSource="{x:Bind MainViewModel.MapViewModel.LocationDataSource, Mode=OneWay}" />
                </utils:MapViewExtensions.LocationDisplayController>
            </esri:MapView>

            <!-- Identify spinner -->
            <views:IdentifyIndicatorOverlay MainViewModel="{x:Bind MainViewModel, Mode=OneWay}"
                                            panels:MapLayoutPanel.LayoutRole="BackgroundView" />
            <!-- Map widget controls -->
            <StackPanel Style="{StaticResource MapAccessoryContainerStack}"
                        HorizontalAlignment="Right"
                        panels:MapLayoutPanel.AttachPosition="TopRight">
                <Button Style="{StaticResource MapAccessoryButton}"
                        Command="{x:Bind MainViewModel.MapAccessoryViewModel.ToggleBookmarksCommand, Mode=OneTime}">
                    <Path Data="{StaticResource calcite-ui-bookmark-32}" Style="{StaticResource MapAccessoryPathIcon}" />
                </Button>
                <Button Style="{StaticResource MapAccessoryButton}"
                        Command="{x:Bind MainViewModel.MapAccessoryViewModel.ToggleTocCommand, Mode=OneTime}">
                    <Path Data="{StaticResource calcite-ui-legend-32}" Style="{StaticResource MapAccessoryPathIcon}" />
                </Button>
                <Button Style="{StaticResource MapAccessoryButton}"
                        Command="{x:Bind MainViewModel.MapAccessoryViewModel.ToggleLayersCommand, Mode=OneTime}">
                    <Path Data="{StaticResource calcite-ui-layers-32}" Style="{StaticResource MapAccessoryPathIcon}" />
                </Button>
            </StackPanel>

            <!-- Editing buttons -->
            <StackPanel Style="{StaticResource MapAccessoryContainerStack}"
                        HorizontalAlignment="Right"
                        panels:MapLayoutPanel.AttachPosition="TopRight">
                <Button Style="{StaticResource MapAccessoryButton}"
                        Command="{x:Bind MainViewModel.StartNewFeatureCommand, Mode=OneTime}">
                    <Path Data="{StaticResource calcite-ui-plus-circle-32}" Style="{StaticResource MapAccessoryPathIcon}"
                          Fill="{StaticResource brand-success}"/>
                </Button>
            </StackPanel>

            <!-- Navigation buttons -->
            <StackPanel Style="{StaticResource MapAccessoryContainerStack}"
                        HorizontalAlignment="Left"
                        panels:MapLayoutPanel.AttachPosition="TopLeft">
                <Button Style="{StaticResource MapAccessoryButton}"
                        Command="{x:Bind MainViewModel.MapAccessoryViewModel.GoHomeCommand, Mode=OneTime}">
                    <Path Data="{StaticResource calcite-ui-home-32}" Style="{StaticResource MapAccessoryPathIcon}" />
                </Button>
            </StackPanel>

            <StackPanel Style="{StaticResource MapAccessoryContainerStack}"
                        HorizontalAlignment="Left"
                        panels:MapLayoutPanel.AttachPosition="TopLeft">
                <Button Style="{StaticResource MapAccessoryButton}"
                        Command="{x:Bind MainViewModel.MapAccessoryViewModel.ZoomInCommand, Mode=OneTime}">
                    <Path Data="{StaticResource calcite-ui-plus-32}" Style="{StaticResource MapAccessoryPathIcon}" />
                </Button>
                <Button Style="{StaticResource MapAccessoryButton}"
                        Command="{x:Bind MainViewModel.MapAccessoryViewModel.ZoomOutCommand, Mode=OneTime}">
                    <Path Data="{StaticResource calcite-ui-minus-32}" Style="{StaticResource MapAccessoryPathIcon}" />
                </Button>
            </StackPanel>

            <StackPanel Style="{StaticResource MapAccessoryContainerStack}"
                        HorizontalAlignment="Left"
                        panels:MapLayoutPanel.AttachPosition="TopLeft">
                <Button Style="{StaticResource MapAccessoryButton}"
                        IsEnabled="{x:Bind MainViewModel.MapViewModel.IsLocationStarted, Mode=OneWay}"
                        Command="{x:Bind MainViewModel.MapViewModel.MoveToCurrentLocationCommand, Mode=OneWay}">
                    <Path Data="{StaticResource calcite-ui-gps-on-16}" Style="{StaticResource MapAccessoryPathIcon}" />
                </Button>
            </StackPanel>

            <!-- Attribution -->
            <Button Style="{StaticResource AttributionButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind MapView.AttributionText, Mode=OneWay}"
                    Command="{x:Bind MainViewModel.MapAccessoryViewModel.ToggleAttributionCommand, Mode=OneWay}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Style="{StaticResource AttributionTextBorderStyle}">
                        <TextBlock Text="{x:Bind MapView.AttributionText, Mode=OneWay}"
                                   TextTrimming="CharacterEllipsis" Foreground="Black"
                                   FontSize="9"
                                   VerticalAlignment="Center" />
                    </Border>
                    <Path Data="{StaticResource calcite-ui-esri-logo}" 
                          Fill="White" Stretch="Uniform" Height="20" 
                          Grid.Column="1" />
                </Grid>
            </Button>

            <!-- Floating sheets & widgets -->
            <cards:CardDeck panels:MapLayoutPanel.LayoutRole="FloatingSheet" 
                            CardPresenterStyle="{StaticResource BasicCardStyle}"
                            NavigationContainerStyle="{StaticResource NavContainerStyle}"
                            NavigationItemTemplate="{StaticResource NavItemTemplate}">
                <!-- TODO - responsive value -->
                <cards:CardDeck.Cards>
                    <cards:OverlayCard Title="{x:Bind MainViewModel.IdentifiedFeatureViewModel.PopupManager.Title, Mode=OneWay}"
                                       IconSource="{x:Bind MainViewModel.IdentifiedFeatureViewModel.IconImageSource, Mode=OneWay}"
                                       IsOpen="{x:Bind MainViewModel.IdentifiedFeatureViewModel, Converter={StaticResource NullToBoolConverter}, Mode=OneWay}">
                        <views:IdentifiedFeaturePopup DataContext="{x:Bind MainViewModel, Mode=OneWay}" />
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{x:Bind MainViewModel.ClearIdentifiedFeatureCommand, Mode=OneTime}" Style="{StaticResource CardCloseButton}">
                                <Path Data="{StaticResource calcite-ui-x-16}" Fill="Black" Stretch="Uniform" />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                    <cards:OverlayCard Title="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedOriginRelationship.PopupManager.Title, Mode=OneWay}"
                                       IconSource="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedOriginRelationship.IconImageSource, Mode=OneWay}"
                                       IsOpen="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedOriginRelationship, Converter={StaticResource NullToBoolConverter}, FallbackValue=False, Mode=OneWay}">
                        <views:OriginRelatedRecordPopup DataContext="{x:Bind MainViewModel, Mode=OneWay}" />
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{x:Bind MainViewModel.IdentifiedFeatureViewModel.ClearRelationshipsCommand, Mode=OneWay}" Style="{StaticResource CardCloseButton}">
                                <Path Data="{StaticResource calcite-ui-x-16}" Fill="Black" Stretch="Uniform" />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                    <cards:OverlayCard Title="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedDestinationRelationship.PopupManager.Title, Mode=OneWay}"
                                       IconSource="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedDestinationRelationship.IconImageSource, Mode=OneWay}"
                                       IsOpen="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedDestinationRelationship, Converter={StaticResource NullToBoolConverter}, FallbackValue=False, Mode=OneWay}">
                        <views:DestinationRelatedRecordPopup DataContext="{x:Bind MainViewModel.IdentifiedFeatureViewModel, Mode=OneWay}" />
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{x:Bind MainViewModel.IdentifiedFeatureViewModel.ClearRelationshipsCommand, Mode=OneWay}" Style="{StaticResource CardCloseButton}">
                                <Path Data="{StaticResource calcite-ui-x-16}" Fill="Black" Stretch="Uniform" />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                    <cards:OverlayCard
                        Title="{x:Bind Converter={StaticResource LocalizationConverter}, ConverterParameter=TOC_PanelHeader}"
                        IsOpen="{x:Bind MainViewModel.MapAccessoryViewModel.IsTocOpen, Mode=OneWay}">
                        <!-- TODO: TOC card-->
                        <cards:OverlayCard.IconContent>
                            <Path Data="{StaticResource calcite-ui-layers-16}" Style="{StaticResource CardPathIcon}"/>
                        </cards:OverlayCard.IconContent>
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{x:Bind MainViewModel.MapAccessoryViewModel.ToggleTocCommand, Mode=OneTime}" 
                                    Style="{StaticResource CardCloseButton}">
                                <Path Data="{StaticResource calcite-ui-x-16}" Fill="Black" Stretch="Uniform" />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                        <muxc:TreeView ItemsSource="{x:Bind MapView.Map.OperationalLayers, Mode=OneWay}"
                                       ItemContainerStyle="{StaticResource LayerTreeViewItem}">
                            <muxc:TreeView.ItemTemplate>
                                <DataTemplate x:DataType="mapping:ILayerContent">
                                    <muxc:TreeViewItem ItemsSource="{x:Bind SublayerContents}">
                                        <muxc:TreeViewItem.Content>
                                            <CheckBox IsChecked="{x:Bind IsVisible, Mode=TwoWay}"
                                                      Style="{StaticResource TreeViewCheckboxStyle}"
                                                      Content="{x:Bind Name, Mode=OneWay}" />
                                        </muxc:TreeViewItem.Content>
                                    </muxc:TreeViewItem>
                                </DataTemplate>

                            </muxc:TreeView.ItemTemplate>
                        </muxc:TreeView>
                    </cards:OverlayCard>

                    <cards:OverlayCard Title="{x:Bind Converter={StaticResource LocalizationConverter}, ConverterParameter=Bookmarks_PanelHeader}"
                                       IsOpen="{x:Bind MainViewModel.MapAccessoryViewModel.IsBookmarksOpen, Mode=OneWay}">
                        <cards:OverlayCard.IconContent>
                            <Path Data="{StaticResource calcite-ui-bookmark-16}"
                                  Style="{StaticResource CardPathIcon}" />
                        </cards:OverlayCard.IconContent>
                        <toolkit:BookmarksView GeoView="{x:Bind MapView}"
                                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                               ItemTemplate="{StaticResource BookmarksViewItemTemplate}" />
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{x:Bind MainViewModel.MapAccessoryViewModel.ToggleBookmarksCommand, Mode=OneWay}" 
                                    Style="{StaticResource CardCloseButton}">
                                <Path Data="{StaticResource calcite-ui-x-16}" Fill="Black" Stretch="Uniform" />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                    <cards:OverlayCard Title="{x:Bind Converter={StaticResource LocalizationConverter}, ConverterParameter=Legend_PanelHeader}"
                                       IsOpen="{x:Bind MainViewModel.MapAccessoryViewModel.IsLayersOpen, Mode=OneWay}">
                                       <!-- TODO - fix foreground not being set properly -->
                        <toolkit:Legend GeoView="{x:Bind MapView}" 
                                        Background="{StaticResource content-background}"
                                        RequestedTheme="Light"
                                        Foreground="{StaticResource content-foreground}" />
                        <cards:OverlayCard.IconContent>
                            <Path Data="{StaticResource calcite-ui-legend-16}" Style="{StaticResource CardPathIcon}" />
                        </cards:OverlayCard.IconContent>
                        <cards:OverlayCard.TopAccessories>
                            <Button Command="{x:Bind MainViewModel.MapAccessoryViewModel.ToggleLayersCommand, Mode=OneTime}" 
                                    Style="{StaticResource CardCloseButton}">
                                <Path Data="{StaticResource calcite-ui-x-16}" Fill="Black" Stretch="Uniform" />
                            </Button>
                        </cards:OverlayCard.TopAccessories>
                    </cards:OverlayCard>

                </cards:CardDeck.Cards>
            </cards:CardDeck>
            
            <views:AddFeatureView x:Name="AddFeatureView"
                                  panels:MapLayoutPanel.LayoutRole="TransientOverlay"
                                  DataContext="{x:Bind MainViewModel, Mode=OneWay}"
                                  Visibility="{x:Bind MainViewModel.IsAddingFeature, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
            <views:DownloadView panels:MapLayoutPanel.LayoutRole="TransientOverlay"
                                Grid.Row="2" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3"
                                DataContext="{x:Bind MainViewModel, Mode=OneWay}"
                                Visibility="{x:Bind MainViewModel.DownloadViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"
                                VisibleArea="{Binding ElementName=MapView, Mode=OneWay, Path=VisibleArea}" />
        </panels:MapLayoutPanel>
        <Popup IsOpen="{x:Bind MainViewModel.IsMapStatusPanelOpen, Mode=TwoWay}" 
               Style="{StaticResource Popup}" 
               Grid.Row="1" Width="300"
               HorizontalAlignment="Center">
            <popups:OnlineMapStatusPanel MainViewModel="{x:Bind MainViewModel, Mode=OneWay}" />
        </Popup>
        <Popup IsOpen="{x:Bind MainViewModel.IsOfflinePanelOpen, Mode=TwoWay}"
               Style="{StaticResource Popup}" HorizontalAlignment="Center" MaxWidth="300" 
               Grid.Row="1">
            <popups:OfflineMapStatusPanel MainViewModel="{x:Bind MainViewModel, Mode=OneWay}" />
        </Popup>
        <Popup IsOpen="{x:Bind MainViewModel.IsUserPanelOpen, Mode=TwoWay}"
               Style="{StaticResource Popup}" Width="300"
               Grid.Row="1" HorizontalAlignment="Right">
            <popups:SignedInUserPanel MainViewModel="{x:Bind MainViewModel, Mode=OneWay}" />
        </Popup>
    </Grid>
    <!--<Grid Background="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="Auto"
                MinWidth="300"
                MaxWidth="300" />
            <ColumnDefinition
                Width="Auto"
                MinWidth="300"
                MaxWidth="300" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid x:Name="AppTitleBar" Background="Transparent" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Image Source="Assets/Square44x44Logo.png" 
                   Grid.Column="0" HorizontalAlignment="Left" 
                   Width="20" Height="20" Margin="5"/>
        </Grid>
        -->
    <!--  Title bar with top buttons  -->
    <!--
        <CommandBar
            Grid.Row="1"
            Grid.ColumnSpan="3"
            Background="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}}"
            Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}">
            <CommandBar.Content>
                <TextBlock
                    Margin="15,0,0,0"
                    Style="{StaticResource SubheaderTextBlockStyle}" FontSize="28"
                    Text="{x:Bind MainViewModel.MapViewModel.Map.Item.Title, Mode=OneWay}" />
            </CommandBar.Content>
            <AppBarButton
                x:Uid="ShowBookmarksButton"
                Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}"
                Visibility="{x:Bind MapView.Map.Bookmarks, Mode=OneWay, Converter={StaticResource EmptyCollectionToVisibilityConverter}, ConverterParameter=Inverse}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="Assets/Calcite/bookmark-32.png"
                                Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}"
                                Width="20" Height="20"/>
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                    <Flyout>
                        <toolkit:BookmarksView GeoView="{x:Bind MapView, Mode=OneWay}" 
                                               MaxHeight="300" MaxWidth="250" />
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton
                x:Uid="ShowLegendButton"
                Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="Assets/Calcite/legend-32.png" ShowAsMonochrome="True"
                                Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}"
                                Width="20" Height="20"/>
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                    <Flyout>
                        <toolkit:Legend GeoView="{x:Bind MapView, Mode=OneWay}" MaxHeight="400" MaxWidth="250" />
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton
                x:Uid="ShowTOCButton"
                Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="Assets/Calcite/layers-32.png" ShowAsMonochrome="True"
                                Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}"
                                Width="20" Height="20"/>
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                    <Flyout>
                        <muxc:TreeView
                            ItemsSource="{x:Bind MainViewModel.MapViewModel.Map.OperationalLayers,Mode=OneWay}" 
                            BorderBrush="Transparent"
                            MaxWidth="300" MaxHeight="250">
                            -->
    <!-- Overrides style to hide expander; can be removed for maps with sublayers -->
    <!--
                            <muxc:TreeView.ItemContainerStyle>
                                <Style TargetType="muxc:TreeViewItem">
                                    <Style.Setters>
                                        <Setter Property="Margin" Value="-20,0,5,0" />
                                    </Style.Setters>
                                </Style>
                            </muxc:TreeView.ItemContainerStyle>
                            <muxc:TreeView.ItemTemplate>
                                <DataTemplate x:DataType="mapping:ILayerContent">
                                    <muxc:TreeViewItem ItemsSource="{x:Bind SublayerContents}" Padding="0,0,10,0">
                                        <muxc:TreeViewItem.Content>
                                            <CheckBox IsChecked="{x:Bind IsVisible, Mode=TwoWay}"
                                                      Margin="0"
                                                      HorizontalAlignment="Stretch"
                                                      Content="{x:Bind Name}" />
                                        </muxc:TreeViewItem.Content>
                                    </muxc:TreeViewItem>
                                </DataTemplate>
                            </muxc:TreeView.ItemTemplate>
                        </muxc:TreeView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton
                x:Uid="CurrentLocationButton"
                Command="{x:Bind MainViewModel.MapViewModel.MoveToCurrentLocationCommand, Mode=OneWay}"
                IsEnabled="{x:Bind MainViewModel.MapViewModel.IsLocationStarted, Mode=OneWay}"
                Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="Assets/Calcite/gps-on-32.png" ShowAsMonochrome="True"
                                Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}"
                                Width="20" Height="20"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton
                x:Uid="AddFeatureButton"
                Command="{x:Bind MainViewModel.StartNewFeatureCommand, Mode=OneWay}"
                Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}"
                IsEnabled="{Binding ElementName=MapView, Path=Map, Mode=OneWay, Converter={StaticResource NullToBoolConverter}}"
                Visibility="{x:Bind MainViewModel.IsAddingFeature, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="Assets/Calcite/plus-circle-32.png" ShowAsMonochrome="True"
                                Foreground="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}, ConverterParameter=Inverse}"
                                Width="20" Height="20"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <CommandBar.SecondaryCommands>
                -->
    <!--  Inactive button displaying signed in user info  -->
    <!--
                <AppBarButton DataContext="{x:Bind AuthViewModel}" 
                              Visibility="{x:Bind AuthViewModel.AuthenticatedUser, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                    <AppBarButton.Template>
                        <ControlTemplate>
                            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                                <Image
                                    MaxHeight="35"
                                    Margin="14,10,11,10"
                                    Source="{Binding AuthenticatedUser.ThumbnailUri, Mode=OneWay}" />
                                <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                                    <TextBlock
                                        x:Uid="SignedInTextBlock"
                                        Margin="0,0,10,0"
                                        Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBlock Text="{Binding AuthenticatedUser.FullName, Mode=OneWay}" />
                                </StackPanel>
                            </StackPanel>
                        </ControlTemplate>
                    </AppBarButton.Template>
                </AppBarButton>

                <AppBarSeparator Visibility="{x:Bind AuthViewModel.AuthenticatedUser, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" />

                -->
    <!--  Working online button  -->
    <!--
                <AppBarButton
                    x:Uid="WorkingOnlineButton"
                    IsEnabled="False"
                    Visibility="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToVisibilityConverter}}">
                    <AppBarButton.Icon>
                        <BitmapIcon UriSource="Assets/Calcite/online-32.png" />
                    </AppBarButton.Icon>
                </AppBarButton>

                -->
    <!--  Work online button  -->
    <!--
                <AppBarButton
                    x:Uid="WorkOnlineButton"
                    Command="{x:Bind MainViewModel.WorkOnlineCommand, Mode=OneWay}"
                    CommandParameter="{Binding ElementName=MapView, Mode=OneWay, Path=VisibleArea}"
                    Visibility="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToVisibilityConverter}, ConverterParameter=Inverse}">
                    <AppBarButton.Icon>
                        <BitmapIcon UriSource="Assets/Calcite/online-32.png" />
                    </AppBarButton.Icon>
                </AppBarButton>

                <AppBarSeparator Visibility="{x:Bind MainViewModel.OfflineMap, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" />

                -->
    <!--  Working offline button  -->
    <!--
                <AppBarButton
                    x:Uid="WorkingOfflineButton"
                    IsEnabled="False"
                    Visibility="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToVisibilityConverter}, ConverterParameter=Inverse}">
                    <AppBarButton.Icon>
                        <BitmapIcon UriSource="Assets/Calcite/offline-32.png" />
                    </AppBarButton.Icon>
                </AppBarButton>

                -->
    <!--  Work offline button  -->
    <!--
                <AppBarButton
                    x:Uid="WorkOfflineButton"
                    Command="{x:Bind MainViewModel.WorkOfflineCommand, Mode=OneWay}"
                    Visibility="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToVisibilityConverter}}">
                    <AppBarButton.Icon>
                        <BitmapIcon UriSource="Assets/Calcite/offline-32.png" />
                    </AppBarButton.Icon>
                </AppBarButton>

                -->
    <!--  Synchronize button  -->
    <!--
                <AppBarButton
                    x:Uid="SyncButton"
                    Command="{x:Bind MainViewModel.SyncMapCommand, Mode=OneWay}"
                    DataContext="{x:Bind MainViewModel, Mode=OneWay}"
                    Visibility="{x:Bind MainViewModel.OfflineMap, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                    <AppBarButton.Icon>
                        <BitmapIcon UriSource="Assets/Calcite/refresh-32.png" />
                    </AppBarButton.Icon>
                </AppBarButton>

                -->
    <!--  Delete offline map button  -->
    <!--
                <AppBarButton
                    x:Uid="DeleteMapButton"
                    Command="{x:Bind MainViewModel.DeleteOfflineMapCommand, Mode=OneWay}"
                    Visibility="{x:Bind MainViewModel.OfflineMap, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                    <AppBarButton.Icon>
                        <BitmapIcon UriSource="Assets/Calcite/trash-32.png" />
                    </AppBarButton.Icon>
                </AppBarButton>

                -->
    <!--  Inactive button displaying last sync date  -->
    <!--
                <AppBarButton
                    Margin="12,0,0,0"
                    DataContext="{x:Bind MainViewModel, Mode=OneWay}"
                    Visibility="{x:Bind MainViewModel.OfflineMap, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                    <AppBarButton.Template>
                        <ControlTemplate>
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="Last Sync:" />
                                <TextBlock
                                    Margin="5,0,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="{Binding SyncDate, Mode=OneWay}" />
                            </StackPanel>
                        </ControlTemplate>
                    </AppBarButton.Template>
                </AppBarButton>

                <AppBarSeparator />

                -->
    <!--  Sign in button  -->
    <!--
                <AppBarButton
                    x:Uid="SignInButton"
                    Command="{x:Bind AuthViewModel.SignInCommand}"
                    Visibility="{x:Bind AuthViewModel.AuthenticatedUser, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}">
                    <AppBarButton.Icon>
                        <BitmapIcon UriSource="Assets/Calcite/sign-in-32.png" />
                    </AppBarButton.Icon>
                </AppBarButton>

                -->
    <!--  Sign out button  -->
    <!--
                <AppBarButton
                    x:Uid="SignOutButton"
                    Command="{x:Bind AuthViewModel.SignOutCommand}"
                    Visibility="{x:Bind AuthViewModel.AuthenticatedUser, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                    <AppBarButton.Icon>
                        <BitmapIcon UriSource="Assets/Calcite/sign-out-32.png" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>

        -->
    <!--  MapView Control containing map  -->
    <!--
                

        -->
    <!--  Compass control that displays when user rotates the map  -->
    <!--
        <toolkit:Compass
            Grid.Row="3"
            Grid.Column="2"
            Margin="20"
            VerticalAlignment="Bottom"
            AutoHide="True"
            GeoView="{Binding ElementName=MapView, Mode=OneWay}" />

        -->
    <!--  New feature overlay  -->
    <!--
        <views:AddFeatureView
            x:Name="AddFeatureView"
            Grid.Row="2"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            DataContext="{x:Bind MainViewModel, Mode=OneWay}"
            Visibility="{x:Bind MainViewModel.IsAddingFeature, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />

        -->
    <!--  Download view  -->
    <!--
        <views:DownloadView
            Grid.Row="2"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            DataContext="{x:Bind MainViewModel, Mode=OneWay}"
            Visibility="{x:Bind MainViewModel.DownloadViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"
            VisibleArea="{Binding ElementName=MapView, Mode=OneWay, Path=VisibleArea}" />

        -->
    <!--  Sync View  -->
    <!--
        <StackPanel
            Grid.Row="2"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            VerticalAlignment="Center"
            Orientation="Vertical"
            Visibility="{x:Bind MainViewModel.SyncViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
            <Grid
                MaxWidth="350"
                MaxHeight="250"
                Background="{ThemeResource SystemAltHighColor}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <ProgressBar
                    Grid.Row="0"
                    Width="300"
                    Height="20"
                    Margin="20"
                    Background="{ThemeResource SystemChromeLowColor}"
                    Foreground="{ThemeResource SystemListLowColor}"
                    Maximum="100"
                    Minimum="0"
                    Value="{x:Bind MainViewModel.SyncViewModel.Progress, Mode=OneWay}" />
                <TextBlock
                    x:Uid="SynchingMessage"
                    Grid.Row="1"
                    Margin="0,0,0,20"
                    HorizontalAlignment="Center" />
                <Button
                    x:Uid="CancelSyncButton"
                    Grid.Row="2"
                    Width="70"
                    Margin="0,0,0,20"
                    HorizontalAlignment="Center"
                    Command="{x:Bind MainViewModel.SyncViewModel.CancelSyncCommand, Mode=OneWay}" />
            </Grid>
        </StackPanel>

        -->
    <!--  Grid control that contains the popups for identified features and related records  -->
    <!--
        <Grid Grid.Row="2" Grid.RowSpan="2" Grid.Column="0" 
              Background="{ThemeResource SystemControlAcrylicElementBrush}"
              Visibility="{x:Bind MainViewModel.IdentifiedFeatureViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid x:Name="IdentifiedFeatureBlade" Grid.Column="0" Width="300" Padding="0"
                  BorderBrush="{ThemeResource AppBarBorderThemeBrush}" BorderThickness="0,0,1,0"
                  Tag="{x:Bind MainViewModel.IdentifiedFeatureViewModel.EditViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}"
                  Visibility="{x:Bind MainViewModel.IdentifiedFeatureViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0"
                           Text="{x:Bind MainViewModel.IdentifiedFeatureViewModel.PopupManager.Title, Mode=OneWay}"
                           Margin="5,5,0,0" TextAlignment="Left"
                           Padding="5"
                           Style="{ThemeResource TitleTextBlockStyle}" />
                <Button Grid.Column="2" 
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Padding="5" Width="30" Height="30"
                        Background="Transparent" 
                        Command="{x:Bind MainViewModel.ClearIdentifiedFeatureCommand}">
                    <BitmapIcon UriSource="Assets/Calcite/x-32.png"
                                Width="15" Height="15"/>
                </Button>
                <views:IdentifiedFeaturePopup DataContext="{x:Bind MainViewModel, Mode=OneWay}"
                                              Grid.Row="1" Grid.ColumnSpan="2"/>
            </Grid>
            <Grid x:Name="OriginRelationshipBlade" Grid.Column="1" Width="300"
                  BorderBrush="{ThemeResource AppBarBorderThemeBrush}" BorderThickness="0,0,1,0"
                  Visibility="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedOriginRelationship, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"
                  Tag="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedOriginRelationship.EditViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="2" 
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Padding="5" Width="30" Height="30"
                        Background="Transparent" 
                        Command="{x:Bind MainViewModel.IdentifiedFeatureViewModel.ClearRelationshipsCommand, Mode=OneWay}" >
                    <BitmapIcon UriSource="Assets/Calcite/x-32.png"
                                Width="15" Height="15"/>
                </Button>
                <TextBlock Text="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedOriginRelationship.PopupManager.Title, Mode=OneWay}"
                           Grid.Row="0" 
                           Margin="5,5,0,0" 
                           TextAlignment="Left"
                           Padding="5"
                           Style="{ThemeResource TitleTextBlockStyle}"/>
                <views:OriginRelatedRecordPopup DataContext="{x:Bind MainViewModel, Mode=OneWay}"
                                                Grid.Row="1" Grid.ColumnSpan="2" />
            </Grid>
            <Grid x:Name="DestinationRelationshipBlade" Grid.Column="2" Width="300"
                  BorderBrush="{ThemeResource AppBarBorderThemeBrush}" BorderThickness="0,0,1,0"
                  Visibility="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedDestinationRelationship, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"
                  Tag="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedDestinationRelationship.EditViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="2" 
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Padding="5" Width="30" Height="30"
                        Background="Transparent" 
                        Command="{x:Bind MainViewModel.IdentifiedFeatureViewModel.ClearRelationshipsCommand, Mode=OneWay}" >
                    <BitmapIcon UriSource="Assets/Calcite/x-32.png"
                                Width="15" Height="15"/>
                </Button>
                <TextBlock Text="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedDestinationRelationship.PopupManager.Title, Mode=OneWay}"
                           Grid.Row="0" 
                           Margin="5,5,0,0" 
                           TextAlignment="Left"
                           Padding="5"
                           Style="{ThemeResource TitleTextBlockStyle}"/>
                <views:DestinationRelatedRecordPopup DataContext="{x:Bind MainViewModel.IdentifiedFeatureViewModel, Mode=OneWay}"
                                                     Grid.Row="1" Grid.ColumnSpan="2" />
            </Grid>
        </Grid>

        -->
    <!-- Progress indicator for when identify is in progress -->
    <!--
        <ProgressBar 
            IsIndeterminate="True" 
            Visibility="{x:Bind MainViewModel.IdentifyController.IsIdentifyInProgress, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
            Grid.Row="2" 
            Grid.Column="0"
            Grid.ColumnSpan="3" />

        -->
    <!--  Busy Waiting View  -->
    <!--
        <Grid
            Grid.Row="1"
            Grid.RowSpan="3"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Background="{ThemeResource SystemControlChromeMediumAcrylicElementMediumBrush}"
            Visibility="{x:Bind MainViewModel.IsBusyWaiting, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <StackPanel VerticalAlignment="Center">
                <ProgressBar
                    Width="300"
                    Margin="20"
                    IsIndeterminate="True">
                    <ProgressBar.Foreground>
                        <SolidColorBrush Color="{ThemeResource SystemAccentColor}" />
                    </ProgressBar.Foreground>
                </ProgressBar>
                <TextBlock
                    Text="{x:Bind MainViewModel.BusyWaitingMessage, Mode=OneWay}"
                    Style="{ThemeResource HeaderTextBlockStyle}"
                    Margin="0,0,0,20"
                    HorizontalAlignment="Center" />
            </StackPanel>
        </Grid>
    </Grid>-->
</Page>
