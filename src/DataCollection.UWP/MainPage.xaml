<Page
    x:Class="Esri.ArcGISRuntime.ExampleApps.DataCollection.UWP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:Esri.ArcGISRuntime.ExampleApps.DataCollection.Shared.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:esri="using:Esri.ArcGISRuntime.UI.Controls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:localConverters="using:Esri.ArcGISRuntime.ExampleApps.DataCollection.UWP.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:Esri.ArcGISRuntime.Toolkit.UI.Controls"
    xmlns:utils="using:Esri.ArcGISRuntime.ExampleApps.DataCollection.Shared.Utils"
    xmlns:views="using:Esri.ArcGISRuntime.ExampleApps.DataCollection.UWP.Views"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters:NullToBoolConverter x:Key="NullToBoolConverter" />
            <converters:ConnectivityModeToVisibilityConverter x:Key="ConnectivityModeToVisibilityConverter" />
            <localConverters:ConnectivityModeToColorConverter x:Key="ConnectivityModeToColorConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="Auto"
                MinWidth="300"
                MaxWidth="300" />
            <ColumnDefinition
                Width="Auto"
                MinWidth="300"
                MaxWidth="300" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  Title bar with top buttons  -->
        <CommandBar
            Grid.Row="0"
            Grid.ColumnSpan="3"
            Background="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToColorConverter}}">
            <CommandBar.Content>
                <TextBlock
                    Margin="15,0,0,0"
                    Style="{StaticResource SubheaderTextBlockStyle}"
                    Text="{x:Bind MainViewModel.MapViewModel.Map.Item.Title, Mode=OneWay}" />
            </CommandBar.Content>
            <AppBarButton
                x:Uid="CurrentLocationButton"
                Command="{x:Bind MainViewModel.MapViewModel.MoveToCurrentLocationCommand, Mode=OneWay}"
                IsEnabled="{x:Bind MainViewModel.MapViewModel.IsLocationStarted, Mode=OneWay}">
                <AppBarButton.Icon>
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE81D;" />
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton
                x:Uid="AddFeatureButton"
                Icon="Add"
                IsEnabled="{Binding ElementName=MapView, Path=Map, Mode=OneWay, Converter={StaticResource NullToBoolConverter}}"
                Visibility="{x:Bind MainViewModel.IsLocationOnlyMode, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:ChangePropertyAction
                            PropertyName="Visibility"
                            TargetObject="{Binding ElementName=AddFeatureView, Mode=OneWay}"
                            Value="Visible" />
                        <core:ChangePropertyAction
                            PropertyName="IsLocationOnlyMode"
                            TargetObject="{x:Bind MainViewModel, Mode=OneWay}"
                            Value="true" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <CommandBar.SecondaryCommands>
                <!--  Inactive button displaying signed in user info  -->
                <AppBarButton DataContext="{x:Bind AuthViewModel}" Visibility="{x:Bind AuthViewModel.AuthenticatedUser, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                    <AppBarButton.Template>
                        <ControlTemplate>
                            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                                <Image
                                    MaxHeight="35"
                                    Margin="14,10,11,10"
                                    Source="{Binding AuthenticatedUser.ThumbnailUri, Mode=OneWay}" />
                                <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                                    <TextBlock
                                        x:Uid="SignedInTextBlock"
                                        Margin="0,0,10,0"
                                        Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBlock Text="{Binding AuthenticatedUser.FullName, Mode=OneWay}" />
                                </StackPanel>
                            </StackPanel>
                        </ControlTemplate>
                    </AppBarButton.Template>
                </AppBarButton>

                <AppBarSeparator Visibility="{x:Bind AuthViewModel.AuthenticatedUser, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" />

                <!--  Working online button  -->
                <AppBarButton
                    x:Uid="WorkingOnlineButton"
                    IsEnabled="False"
                    Visibility="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToVisibilityConverter}}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEC3F;" />
                    </AppBarButton.Icon>
                </AppBarButton>

                <!--  Work online button  -->
                <AppBarButton
                    x:Uid="WorkOnlineButton"
                    Command="{x:Bind MainViewModel.WorkOnlineCommand, Mode=OneWay}"
                    CommandParameter="{Binding ElementName=MapView, Mode=OneWay, Path=VisibleArea}"
                    Visibility="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToVisibilityConverter}, ConverterParameter=Inverse}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEC3F;" />
                    </AppBarButton.Icon>
                </AppBarButton>

                <AppBarSeparator Visibility="{x:Bind MainViewModel.OfflineMap, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" />

                <!--  Working offline button  -->
                <AppBarButton
                    x:Uid="WorkingOfflineButton"
                    IsEnabled="False"
                    Visibility="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToVisibilityConverter}, ConverterParameter=Inverse}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEB5E;" />
                    </AppBarButton.Icon>
                </AppBarButton>

                <!--  Work offline button  -->
                <AppBarButton
                    x:Uid="WorkOfflineButton"
                    Command="{x:Bind MainViewModel.WorkOfflineCommand, Mode=OneWay}"
                    Visibility="{x:Bind MainViewModel.ConnectivityMode, Mode=OneWay, Converter={StaticResource ConnectivityModeToVisibilityConverter}}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEB5E;" />
                    </AppBarButton.Icon>
                </AppBarButton>

                <!--  Synchronize button  -->
                <AppBarButton
                    x:Uid="SyncButton"
                    Command="{x:Bind MainViewModel.SyncMapCommand, Mode=OneWay}"
                    DataContext="{x:Bind MainViewModel, Mode=OneWay}"
                    Visibility="{x:Bind MainViewModel.OfflineMap, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE895;" />
                    </AppBarButton.Icon>
                </AppBarButton>

                <!--  Delete offline map button  -->
                <AppBarButton
                    x:Uid="DeleteMapButton"
                    Command="{x:Bind MainViewModel.DeleteOfflineMapCommand, Mode=OneWay}"
                    Visibility="{x:Bind MainViewModel.OfflineMap, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE74D;" />
                    </AppBarButton.Icon>
                </AppBarButton>

                <!--  Inactive button displaying last sync date  -->
                <AppBarButton
                    Margin="12,0,0,0"
                    DataContext="{x:Bind MainViewModel, Mode=OneWay}"
                    Visibility="{x:Bind MainViewModel.OfflineMap, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                    <AppBarButton.Template>
                        <ControlTemplate>
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="Last Sync:" />
                                <TextBlock
                                    Margin="5,0,0,0"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="{Binding SyncDate, Mode=OneWay}" />
                            </StackPanel>
                        </ControlTemplate>
                    </AppBarButton.Template>
                </AppBarButton>

                <AppBarSeparator />

                <!--  Sign in button  -->
                <AppBarButton
                    x:Uid="SignInButton"
                    Command="{x:Bind AuthViewModel.SignInCommand}"
                    Visibility="{x:Bind AuthViewModel.AuthenticatedUser, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE77B;" />
                    </AppBarButton.Icon>
                </AppBarButton>

                <!--  Sign out button  -->
                <AppBarButton
                    x:Uid="SignOutButton"
                    Command="{x:Bind AuthViewModel.SignOutCommand}"
                    Visibility="{x:Bind AuthViewModel.AuthenticatedUser, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8F8;" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>

        <!--  MapView Control containing map  -->
        <esri:MapView
            x:Name="MapView"
            Grid.Row="1"
            Grid.ColumnSpan="3"
            utils:MapViewExtensions.IdentifyController="{x:Bind MainViewModel.IdentifyController, Mode=OneWay}"
            DataContext="{x:Bind MainViewModel}"
            Map="{x:Bind MainViewModel.MapViewModel.Map, Mode=OneWay}">
            <utils:MapViewExtensions.ViewpointController>
                <utils:ViewpointController Viewpoint="{Binding MapViewModel.AreaOfInterest, Mode=TwoWay}" />
            </utils:MapViewExtensions.ViewpointController>
            <utils:MapViewExtensions.LocationDisplayController>
                <utils:LocationDisplayController DataSource="{x:Bind MainViewModel.MapViewModel.LocationDataSource, Mode=OneWay}" />
            </utils:MapViewExtensions.LocationDisplayController>
        </esri:MapView>

        <!--  Compass control that displays when user rotates the map  -->
        <toolkit:Compass
            Grid.Row="1"
            Grid.Column="2"
            Margin="20"
            VerticalAlignment="Bottom"
            AutoHide="True"
            GeoView="{Binding ElementName=MapView, Mode=OneWay}" />

        <!--  New feature overlay  -->
        <views:AddFeatureView
            x:Name="AddFeatureView"
            Grid.Row="1"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            DataContext="{x:Bind MainViewModel, Mode=OneWay}"
            Visibility="Collapsed" />

        <!--  Download view  -->
        <views:DownloadView
            Grid.Row="1"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            DataContext="{x:Bind MainViewModel, Mode=OneWay}"
            Visibility="{x:Bind MainViewModel.DownloadViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"
            VisibleArea="{Binding ElementName=MapView, Mode=OneWay, Path=VisibleArea}" />

        <!--  Sync View  -->
        <StackPanel
            Grid.Row="1"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            VerticalAlignment="Center"
            Orientation="Vertical"
            Visibility="{x:Bind MainViewModel.SyncViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
            <Grid
                MaxWidth="350"
                MaxHeight="250"
                Background="{ThemeResource SystemAltHighColor}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <ProgressBar
                    Grid.Row="0"
                    Width="300"
                    Height="20"
                    Margin="20"
                    Background="{ThemeResource SystemChromeLowColor}"
                    Foreground="{ThemeResource SystemListLowColor}"
                    Maximum="100"
                    Minimum="0"
                    Value="{x:Bind MainViewModel.SyncViewModel.Progress, Mode=OneWay}" />
                <TextBlock
                    x:Uid="SynchingMessage"
                    Grid.Row="1"
                    Margin="0,0,0,20"
                    HorizontalAlignment="Center" />
                <Button
                    x:Uid="CancelSyncButton"
                    Grid.Row="2"
                    Width="70"
                    Margin="0,0,0,20"
                    HorizontalAlignment="Center"
                    Command="{x:Bind MainViewModel.SyncViewModel.CancelSyncCommand}" />
            </Grid>
        </StackPanel>

        <!--  BladeView control that contains the popups for identified features and related records  -->
        <controls:BladeView
            Grid.Row="1"
            Grid.Column="0"
            BladeClosed="BladeView_BladeClosed"
            BladeMode="Normal"
            Visibility="{x:Bind MainViewModel.IdentifiedFeatureViewModel, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
            <controls:BladeItem
                x:Name="IdentifiedFeatureBlade"
                Header="{x:Bind MainViewModel.IdentifiedFeatureViewModel.PopupManager.Title, Mode=OneWay}"
                IsOpen="{x:Bind MainViewModel.IdentifiedFeatureViewModel, Mode=OneWay, Converter={StaticResource NullToBoolConverter}}">
                <views:IdentifiedFeaturePopup DataContext="{x:Bind MainViewModel, Mode=OneWay}" />
            </controls:BladeItem>
            <controls:BladeItem
                x:Name="OriginRelationshipBlade"
                Collapsed="BladeItem_Collapsed"
                Expanded="BladeItem_Expanded"
                Header="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedOriginRelationship.PopupManager.Title, Mode=OneWay}"
                IsOpen="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedOriginRelationship, Mode=OneWay, Converter={StaticResource NullToBoolConverter}}">
                <views:OriginRelatedRecordPopup DataContext="{x:Bind MainViewModel, Mode=OneWay}" />
            </controls:BladeItem>
            <controls:BladeItem
                x:Name="DestinationRelationshipBlade"
                Header="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedDestinationRelationship.PopupManager.Title, Mode=OneWay}"
                IsOpen="{x:Bind MainViewModel.IdentifiedFeatureViewModel.SelectedDestinationRelationship, Mode=OneWay, Converter={StaticResource NullToBoolConverter}}">
                <views:DestinationRelatedRecordPopup DataContext="{x:Bind MainViewModel.IdentifiedFeatureViewModel, Mode=OneWay}" />
            </controls:BladeItem>
        </controls:BladeView>

        <!--  Busy Waiting View  -->
        <Grid
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Background="{ThemeResource SystemControlChromeMediumAcrylicElementMediumBrush}"
            Visibility="{x:Bind MainViewModel.IsBusyWaiting, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <StackPanel VerticalAlignment="Center">
                <ProgressBar
                    Width="300"
                    Margin="20"
                    IsIndeterminate="True">
                    <ProgressBar.Foreground>
                        <SolidColorBrush Color="{ThemeResource SystemAccentColor}" />
                    </ProgressBar.Foreground>
                </ProgressBar>
                <TextBlock
                    Text="{x:Bind MainViewModel.BusyWaitingMessage, Mode=OneWay}"
                    Style="{ThemeResource HeaderTextBlockStyle}"
                    Margin="0,0,0,20"
                    HorizontalAlignment="Center" />
            </StackPanel>
        </Grid>
    </Grid>
</Page>
