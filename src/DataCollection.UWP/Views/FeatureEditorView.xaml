<UserControl
    x:Class="Esri.ArcGISRuntime.ExampleApps.DataCollection.UWP.Views.FeatureEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:utilities="using:Esri.ArcGISRuntime.ExampleApps.DataCollection.Shared.Utilities"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:Esri.ArcGISRuntime.ExampleApps.DataCollection.Shared.Converters"
    xmlns:localConverters="using:Esri.ArcGISRuntime.ExampleApps.DataCollection.UWP.Converters"
    xmlns:models="using:Esri.ArcGISRuntime.ExampleApps.DataCollection.Shared.Models"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <utilities:AttributeEditorDataTemplateSelector x:Key="AttributeEditorDataTemplateSelector"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <localConverters:ObjectToDateTimeOffsetConverter x:Key="ObjectToDateTimeOffsetConverter"/>
    </UserControl.Resources>

    <Grid>
        <ItemsControl ItemsSource="{Binding Fields, Mode=OneWay}" ItemTemplateSelector="{StaticResource AttributeEditorDataTemplateSelector}">
            <ItemsControl.Resources>
                <!-- Data templates for all the field types used in editing features -->
                <DataTemplate x:Name="StringTemplate" x:Key="StringTemplate" x:DataType="models:FieldContainer">
                    <StackPanel>
                        <TextBlock Text="{x:Bind PopupFieldValue.Field.Label, Mode=OneWay}" Style="{StaticResource BodyTextBlockStyle}"/>
                        <TextBox Text="{x:Bind PopupFieldValue.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                        <TextBlock Text="{x:Bind PopupFieldValue.ValidationError.Message}" Foreground="Red" TextWrapping="Wrap"
                               Visibility="{x:Bind PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}"/>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Name="DateTemplate" x:Key="DateTemplate" x:DataType="models:FieldContainer">
                    <StackPanel>
                        <TextBlock Text="{x:Bind PopupFieldValue.Field.Label, Mode=OneWay}" Style="{StaticResource BodyTextBlockStyle}"/>
                        <CalendarDatePicker Date="{x:Bind PopupFieldValue.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ObjectToDateTimeOffsetConverter}}"/>
                        <TextBlock Text="{x:Bind PopupFieldValue.ValidationError.Message}" Foreground="Red" TextWrapping="Wrap"
                               Visibility="{x:Bind PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}"/>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Name="NumberTemplate" x:Key="NumberTemplate" x:DataType="models:FieldContainer">
                    <StackPanel>
                        <TextBlock Text="{x:Bind PopupFieldValue.Field.Label, Mode=OneWay}" Style="{StaticResource BodyTextBlockStyle}"/>
                        <TextBox Text="{Binding PopupFieldValue.Value, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" InputScope="Digits"/>
                        <TextBlock Text="{x:Bind PopupFieldValue.ValidationError.Message}" Foreground="Red" TextWrapping="Wrap"
                               Visibility="{x:Bind PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}"/>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Name="RangeDomainTemplate" x:Key="RangeDomainTemplate" x:DataType="models:FieldContainer">
                    <StackPanel>
                        <TextBlock Text="{x:Bind PopupFieldValue.Field.Label, Mode=OneWay}" Style="{StaticResource BodyTextBlockStyle}"/>
                        <TextBox Text="{Binding PopupFieldValue.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" InputScope="Digits"/>
                        <TextBlock Text="{x:Bind PopupFieldValue.ValidationError.Message}" Foreground="Red" TextWrapping="Wrap"
                               Visibility="{x:Bind PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}"/>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Name="CodedValueDomainTemplate" x:Key="CodedValueDomainTemplate" x:DataType="models:FieldContainer">
                    <StackPanel>
                        <TextBlock Text="{x:Bind PopupFieldValue.Field.Label, Mode=OneWay}" Style="{StaticResource BodyTextBlockStyle}"/>
                        <ComboBox ItemsSource="{Binding OriginalField.Domain.CodedValues, Mode=OneWay}" SelectedIndex="{Binding PopupFieldValue.Value, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name, Mode=OneWay}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <TextBlock Text="{x:Bind PopupFieldValue.ValidationError.Message}" Foreground="Red" TextWrapping="Wrap"
                               Visibility="{x:Bind PopupFieldValue.ValidationError, Converter={StaticResource NullToVisibilityConverter}}"/>
                    </StackPanel>
                </DataTemplate>
            </ItemsControl.Resources>
        </ItemsControl>
    </Grid>
</UserControl>
